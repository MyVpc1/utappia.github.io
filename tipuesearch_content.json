{"pages":[{"text":"Download Utappia Software Utappia Apps are Linux applications that are Open Source Projects and you can download, use, modify and share your changes with everybody. uCareSystem uCareSystem is an all in one system app which offers an easy to use application to automatically check updates, install updates, remove junk files and clean used space. Go to uCareSystem download page >>> CaptureMe CaptureMe is a Linux screencasting tool which just works ! Hassle free, easy to use screencasting of your desktop or a selected application window. Go to CaptureMe download page >>> Optimus Kernel Optimus Linux Kenrel, is an optimized linux kernel built on top of the latest stable official Ubuntu Linux Kernel and patched with BFS and BFQ schedulers for fast, responsive and optimum desktop experience. Go to Optimus Kernel download page >>> iQunix iQunix is a complete 64 bit operating system built on top of Ubuntu operating system. It's unique design offers a \"bare-bone\", operating system in which almost nothing is pre-installed so that the end user can decide what should be installed. Go to iQunix download page >>>","tags":"pages","loc":"http://utappia.org/pages/downloads.html","title":"Downloads"},{"text":"Get in touch If you wish to contact me for any of the following resons please choose the apropriate way. Contact Your input helps a lot !. Have ideas, questions, comments, or concerns, please let me know! You can email me at : Bug Report Well... human errors are somthing defacto in our universe... Please file a bug report if you find somthing either related to the website or any of my projects. Bugs related to articles , UI/UX of the website can be reported at Utappia Github issues page Bugs related to any of the projects can be reported at the coresponding Github issues page: uCareSystem: issues CaptureMe: issues Optimus Kernel: issues iQunix: issues Support If you need support for an issue with the website or any of the projects you can create a new issue in the coresponding Github page and add a bounty to be paid if it gets fixed. Or you just want to support Utappia you can contribute by donating on any of the projects download page.","tags":"pages","loc":"http://utappia.org/pages/feedback.html","title":"Feedback"},{"text":"Abstract SHC is a free software (GPL v2) that takes a shell script and produces C source code. The generated source code is then compiled and linked to produce a stripped binary executable. Introduction There are some uncomfortable times when you will be asked to not distribute the source code of a shell script (eg. automation script, deployment script, maintenance etc ) that you wrote for a job you have taken as a freelancer or as a sysadmin for a private institution. This is where SCH comes in rescue. SHC creates a stripped binary executable version of the script specified with -f on the command line. If you supply an expiration date with the -e option the compiled binary will refuse to run after the date specified. The message \"Please contact your provider\" will be displayed instead. This message can be changed with the -m option. Materials and Methods You can use the SHC once you install some dependencies and run a make and install Install Required Packages Install required packages for SHC compiler. For Debian/Ubuntu sudo apt-get install libc6-dev Download and Build Download the latest source code of SHC compiler: Download SHC 3.8.9 Extract the zip and compile the SHC source code on your system and install it using the following commands. cd where-the-extracted-is make sudo make install Usage Use the following command to create a binary file of your script.sh shc -T -f script.sh OPTIONS The command line options that are aalso available are: -e date: Expiration date in dd/mm/yyyy format [default:none] -m message: message to display upon expiration [default: \"Please contact your provider\"] -f script_name: File name of the script to compile -i inline_option: Inline option for the shell interpreter i.e: -e -x comand: exec command, as a printf format i.e: exec(\\'%s\\',@ARGV); -l last_option: Last shell option i.e: -- -r Relax security. Make a redistributable binary which executes on different systems running the same operating system. -v Verbose compilation -D Switch on debug exec calls -T Allow binary to be traceable (using strace, ptrace, truss, etc.) -C Display license and exit -A Display abstract and exit -h Display help and exit Results and Discussion SHC itself is not a compiler such as cc, it rather encodes and encrypts a shell script and generates C source code with the added expiration capability. It then uses the system compiler to compile a stripped binary which behaves exactly like the original script. Upon execution, the compiled binary will decrypt and execute the code with the shell -c option. Unfortunatelly, it will not give you any speed improvement as a real C program would. The compiled binary will still be dependent on the shell specified in the first line of the shell code (i.e. #!/bin/sh), thus shc does not create completely independent binaries. SHC's main purpose is to protect your shell scripts from modification or inspection. You can use it if you wish to distribute your scripts but don't want them to be easily readable by other people. References SHC is a tool writen by Francisco Rosales Garcia and distributed under the terms of GNU GPL version 2 Author: Francisco Rosales Garcia","tags":"Security","loc":"http://utappia.org/how-to-encrypt-convert-shell-script-to-binary-executable.html","title":"SHC: How to encrypt and convert a shell script into a binary executable"},{"text":"Abstract A home server can be extremely useful for managing your personal data like backing up your files, streaming your music, photos and videos and accessing locally installed services like webmail, webeditor, calendar, notes, contacts, finances and many more. This is an introductory article for a series of articles for building, deploying, securing, maintaining, troubleshooting and administering your home server or any server in general. Introduction A server, either external (hosted on 3rd party providers) or internal (in your home) is a computer dedicated to run an instance of an application (software) capable of accepting requests from the client (your PC, smartphone/tablet, TV etc.) and giving responses accordingly. Servers can run on any computer including dedicated computers, which individually are also often referred to as \"the server\". Note that in theory, any computerized process that shares a resource to one or more client processes is a server. Materials and Methods Before we get started, I would suggest that you should get a member of your family (kids, brother/sister, grandma? ) or a friend involved to the DIY Home Server project because it will be more fun and entertaining than to work alino on the project. To be able to build a home server we need to understand some terms: Hardware Network Operating System Clients Hardware The computer that will take the role of a home server could be any spare computer lying around. Unfortunately though this would mean that the this computer will have to be 24/7 powered on, could be loud and the consumption of electricity would make it not viable for the role. That is why I suggest avoid using common computers for home server role but instead buying a credit card-sized single-board computer like: Raspberry Pi Banana Pi BeagleBoard Cubieboard Odroid This type of computers are low on power consumption, silent and generally provide more \"value for money\". The total return of investment exceeds the one that will be provided by a common computer. Network The network is the \"glue\" that connects our server with the various clients (as mentioned earlier). The network is consisted of Router Cables IP assignments Our router is actually a mini internet/dhcp server and its role is to provide Internet connection, IP addresses and data/requests deliverance, among other things through the cables to the the clients and vice versa. Operating System There are specialized free (as in beer and freedom of speech) operating systems for the server role that are compatible with the single-board computers that I mentioned earlier. Most popular among them are: Ubuntu Debian Arch Linux openSUSE Personally I prefer Ubuntu because of their predefined development cycle and the 5 years of support on software updates. You should choose the one that you are comfortable administering as this will be installed on the server for years to come. Clients Clients are any devices that connect and exchange information with our home server. The kind of exchange depends on the types of services that the server provides and the capabilities of the device that request those services. A home server usually provides: Centralized storage Media serving Information (calendar, contacts etc.) E-mail Security monitoring P2P file sharing Results and discussion Now that we've discussed the core terms of building a home intranet, we should be able to create a draft plan of the parts that we will need to succeed in our project. I should mention that building a home server not only pays off but it is fun and educative. So stay tuned for the next article either by subscribing to newsletter or following me at social nets. References Server definition : wikipedia Home Server : wikipedia Intranet definition: wikipedia","tags":"Server Roles","loc":"http://utappia.org/introduction-to-diy-home-server.html","title":"Introduction to DIY Home Server"},{"text":"What's happenig here Update : Utappia is in a stable state now and everything should work. If you find something on the website that doesn't work as it supposed to do so, please click on Feedback and send me a bug report ; Utappia version : 15.0513 Utappia version : 15.0507 boom shackalacka - building Utappia.org almost from scratch... after 3 f... years...","tags":"News","loc":"http://utappia.org/read-me-now.html","title":"READ ME NOW"},{"text":"Introduction Keeping a backup or moving around a local repository while retaining its entire versioning information can be achieved with the current utilities of git. Bundles are a great way to backup entire Git repositories. They also let you share changes without a network connection. Materials and Methods We will use the git bundle utility inside our local repository and also git merge to deploy our bundled repo. git bundle turns a repository into a single file that retains the versioning information of the entire project. Here are a list of options that are available: git bundle create <name-of-the-bundle> <git-rev-list-args> git bundle verify <file> git bundle unbundle <file> [<refname>...] Create a bundle While you are inside a repo run: git bundle create ../myrepo.bundle master It should print out something like this: Counting objects: 43, done. Delta compression using up to 2 threads. Compressing objects: 100% (39/39), done. Writing objects: 100% (43/43), 54.44 KiB | 0 bytes/s, done. Total 43 (delta 8), reused 0 (delta 0) This will create the bundle outside (one folder above) the repo and name it myrepo.bundle . When we created the file It was like we where just pushing our master branch to a remote, except it's contained in a file instead of a remote repository. Verify the bundle Before we move our bundle its a good idea to verify its content and check that the bundle file is valid and relevant to the current repository. While you are inside a repo run: git bundle verify ../myrepo.bundle It should print out something like this: The bundle contains this ref: 230b04bdd3367b2db73 refs/heads/master The bundle records a complete history. ../myrepo.bundle is okay Deploy the bundle Assuming that you have the myrepo.bundle file in /home/user and you have created a folder newrepo and initialized a git repository inside it. Here is a generic procedure: mkdir newrepo cd newrepo git init git bundle unbundle ../myrepo.bundle the last command will inform you with the HEAD of you repo f7243ba54eb7de4b76a0 HEAD Now you can merge the contents of myrepo.bubdle file with the one that you initialized inside the newrepo folder: git merge f7243b Alternative procedures are also available, so please follow the links provided on the References section Results and discussion As you can see once you create the bundle file you can easily move it to another folder on the same or an other machine. Assume you want to transfer the history from a repository R1 on machine A to another repository R2 on machine B. For whatever reason, direct connection between A and B is not allowed, but we can move data from A to B via some mechanism (USB flash drive, email, etc..). This way we can update R2 with development made on the branch master in R1. References Ryan Hodson, Git Tips & Tricks : rypress.com Scott Chacon and Ben Straub, Pro Git : git-scm.com","tags":"Repository","loc":"http://utappia.org/git-bundle-backup.html","title":"Create a backup or a bundle of your git repository"},{"text":"How to change the remote url of a local repository The git remote set-url command changes an existing remote repository URL. Syntax: git remote set-url <name> <newurl> <oldurl> The git remote set-url command takes two arguments: An existing remote name <name> . For example, origin (or upstream are two common choices). The new url <newurl> followed by the old url <oldurl> . Example: git remote set-url origin https://github.com/username/new.git https://github.com/username/old.git","tags":"Repository","loc":"http://utappia.org/github-change-url.html","title":"Changing a local git repo's remote URL"},{"text":"Typography Headings Headings from h1 through h6 are constructed with a # for each level: # h1 Heading ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading HTML: <h1> h1 Heading </h1> <h2> h2 Heading </h2> <h3> h3 Heading </h3> <h4> h4 Heading </h4> <h5> h5 Heading </h5> <h6> h6 Heading </h6> Horizontal Rules The HTML <hr> element is for creating a \"thematic break\" between paragraph-level elements. In markdown, you can create a <hr> with any of the following: ___ : three consecutive underscores --- : three consecutive dashes *** : three consecutive asterisks renders to: Body Copy Body copy written as normal, plain text will be wrapped with <p></p> tags in the rendered HTML. So this body copy: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. renders to this HTML: <p> Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. </p> Emphasis Bold For emphasizing a snippet of text with a heavier font-weight. The following snippet of text is rendered as bold text . **rendered as bold text** renders to: rendered as bold text and this HTML <strong> rendered as bold text </strong> Italics For emphasizing a snippet of text with italics. The following snippet of text is rendered as italicized text . _rendered as italicized text_ renders to: rendered as italicized text and this HTML: <em> rendered as italicized text </em> strikethrough In GFM you can do strickthroughs. ~~Strike through this text.~~ Which renders to: ~~Strike through this text.~~ Blockquotes For quoting blocks of content from another source within your document. Add > before any text you want to quote. Add `>` before any text you want to quote. Renders to: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. and this HTML: <blockquote> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. </p> </blockquote> Blockquotes can also be nested: > Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. >> Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. >>> Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Renders to: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Lists Unordered A list of items in which the order of the items does not explicitly matter. You may use any of the following symbols to denote bullets for each list item: * valid bullet - valid bullet + valid bullet For example + Lorem ipsum dolor sit amet + Consectetur adipiscing elit + Integer molestie lorem at massa + Facilisis in pretium nisl aliquet + Nulla volutpat aliquam velit - Phasellus iaculis neque - Purus sodales ultricies - Vestibulum laoreet porttitor sem - Ac tristique libero volutpat at + Faucibus porta lacus fringilla vel + Aenean sit amet erat nunc + Eget porttitor lorem Renders to: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem And this HTML <ul> <li> Lorem ipsum dolor sit amet </li> <li> Consectetur adipiscing elit </li> <li> Integer molestie lorem at massa </li> <li> Facilisis in pretium nisl aliquet </li> <li> Nulla volutpat aliquam velit <ul> <li> Phasellus iaculis neque </li> <li> Purus sodales ultricies </li> <li> Vestibulum laoreet porttitor sem </li> <li> Ac tristique libero volutpat at </li> </ul> </li> <li> Faucibus porta lacus fringilla vel </li> <li> Aenean sit amet erat nunc </li> <li> Eget porttitor lorem </li> </ul> Ordered A list of items in which the order of items does explicitly matter. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem Renders to: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem And this HTML: <ol> <li> Lorem ipsum dolor sit amet </li> <li> Consectetur adipiscing elit </li> <li> Integer molestie lorem at massa </li> <li> Facilisis in pretium nisl aliquet </li> <li> Nulla volutpat aliquam velit </li> <li> Faucibus porta lacus fringilla vel </li> <li> Aenean sit amet erat nunc </li> <li> Eget porttitor lorem </li> </ol> TIP : If you just use 1. for each number, GitHub will automatically number each item. For example: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem Renders to: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem Code Inline code Wrap inline snippets of code with ` . For example, <section></section> should be wrapped as \"inline\". For example, ` <section></section> ` should be wrapped as \"inline\". Indented code Or indent several lines of code by at least four spaces, as in: // Some comments line 1 of code line 2 of code line 3 of code // Some comments line 1 of code line 2 of code line 3 of code Block code \"fences\" Use \"fences\" ``` to block in multiple lines of code. wzxhzdk:20 Sample text here... HTML: <pre> <p> Sample text here... </p> </pre> Syntax highlighting GFM, or \"GitHub Flavored Markdown\" also supports syntax highlighting. To activate it, simply add the file extension of the language you want to use directly after the first code \"fence\", ``` js , and syntax highlighting will automatically be applied in the rendered HTML. For example, to apply syntax highlighting to JavaScript code: wzxhzdk:23 Renders to: grunt . initConfig ({ assemble : { options : { assets : 'docs/assets' , data : 'src/data/*.{json,yml}' , helpers : 'src/custom-helpers.js' , partials : [ 'src/partials/**/*.{hbs,md}' ] }, pages : { options : { layout : 'default.hbs' }, files : { './' : [ 'src/templates/pages/index.hbs' ] } } } }; And this complicated HTML: <div class= \"highlight\" ><pre><span class= \"nx\" > grunt </span><span class= \"p\" > . </span><span class= \"nx\" > initConfig </span><span class= \"p\" > ({ </span> <span class= \"nx\" > assemble </span><span class= \"o\" > : </span> <span class= \"p\" > { </span> <span class= \"nx\" > options </span><span class= \"o\" > : </span> <span class= \"p\" > { </span> <span class= \"nx\" > assets </span><span class= \"o\" > : </span> <span class= \"s1\" > 'docs/assets' </span><span class= \"p\" > , </span> <span class= \"nx\" > data </span><span class= \"o\" > : </span> <span class= \"s1\" > 'src/data/*.{json,yml}' </span><span class= \"p\" > , </span> <span class= \"nx\" > helpers </span><span class= \"o\" > : </span> <span class= \"s1\" > 'src/custom-helpers.js' </span><span class= \"p\" > , </span> <span class= \"nx\" > partials </span><span class= \"o\" > : </span> <span class= \"p\" > [ </span><span class= \"s1\" > 'src/partials/**/*.{hbs,md}' </span><span class= \"p\" > ] </span> <span class= \"p\" > }, </span> <span class= \"nx\" > pages </span><span class= \"o\" > : </span> <span class= \"p\" > { </span> <span class= \"nx\" > options </span><span class= \"o\" > : </span> <span class= \"p\" > { </span> <span class= \"nx\" > layout </span><span class= \"o\" > : </span> <span class= \"s1\" > 'default.hbs' </span> <span class= \"p\" > }, </span> <span class= \"nx\" > files </span><span class= \"o\" > : </span> <span class= \"p\" > { </span> <span class= \"s1\" > './' </span><span class= \"o\" > : </span> <span class= \"p\" > [ </span><span class= \"s1\" > 'src/templates/pages/index.hbs' </span><span class= \"p\" > ] </span> <span class= \"p\" > } </span> <span class= \"p\" > } </span> <span class= \"p\" > } </span> <span class= \"p\" > }; </span> </pre></div> Tables Tables are created by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | Renders to: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. And this HTML: <table> <tr> <th> Option </th> <th> Description </th> </tr> <tr> <td> data </td> <td> path to data files to supply the data that will be passed into templates. </td> </tr> <tr> <td> engine </td> <td> engine to be used for processing templates. Handlebars is the default. </td> </tr> <tr> <td> ext </td> <td> extension to be used for dest files. </td> </tr> </table> Right aligned text Adding a colon on the right side of the dashes below any heading will right align text for that column. | Option | Description | | ------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. Links Basic link [Assemble](http://assemble.io) Renders to (hover over the link, there is no tooltip): Assemble HTML: <a href= \"http://assemble.io\" > Assemble </a> Add a title [Upstage](https://github.com/upstage/ \"Visit Upstage!\") Renders to (hover over the link, there should be a tooltip): Upstage HTML: <a href= \"https://github.com/upstage/\" title= \"Visit Upstage!\" > Upstage </a> Named Anchors Named anchors enable you to jump to the specified anchor point on the same page. For example, each of these chapters: # Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) will jump to these sections: ## Chapter 1 <a id= \"chapter-1\" ></a> Content for chapter one. ## Chapter 2 <a id= \"chapter-2\" ></a> Content for chapter one. ## Chapter 3 <a id= \"chapter-3\" ></a> Content for chapter one. NOTE that specific placement of the anchor tag seems to be arbitrary. They are placed inline here since it seems to be unobtrusive, and it works. Images Images have a similar syntax to links but include a preceding exclamation point. ![Minion](/images/minion.png) or ! [ Alt text ]( / images / stormtroopocat . jpg \"The Stormtroopocat\" ) Like links, Images also have a footnote style syntax ! [ Alt text ][ id ] With a reference later in the document defining the URL location: [id]: /images/dojocat.jpg \"The Dojocat\"","tags":"Web Site","loc":"http://utappia.org/markdown.html","title":"Markdown Typography"},{"text":"Pelican and theme tricks Adding favicon Add favicon.ico the content/extra folder and add the following to pelicanconf.py: STATIC_PATHS = [ 'images' , 'extra/favicon.ico' ] EXTRA_PATH_METADATA = { 'extra/favicon.ico' : { 'path' : 'favicon.ico' } } Source","tags":"Web Site","loc":"http://utappia.org/pelican-tips.html","title":"Pelican Tips"},{"text":"This is my personal notepad for my daily use in my sysadmin work","tags":"News","loc":"http://utappia.org/hello-world.html","title":"Hello World"},{"text":"Ah, it's almost 9:00 and I am still awake. I've been trying to figure out how great it's the howdoi and what if I could modify the script to work along with AskUbuntu.com How it works Just type your question (query or just a phrase) or anything like being in Google, but in terminal . The script will search using Google to find the appropriate AskUbuntu links and throw away the rest of them. Then, it will pick up the first one (use the -n parameter to specify how many answers do you want to see), browse into the code tab, grab the first top voted-reply and throw away the garbage. If you want just the links, use the -l parameter. Download Ask Watch a video presentation:","tags":"Commandline","loc":"http://utappia.org/askubuntu-find-answer-to-your-questions-from-terminal.html","title":"AskUbuntu from Terminal- Find the best answer to your questions from terminal"},{"text":"Abstract The NVIDIA CUDA Toolkit provides a comprehensive development environment for C and C++ developers building GPU-accelerated applications. The CUDA Toolkit includes a compiler for NVIDIA GPUs, math libraries, and tools for debugging and optimizing the performance of your applications. You'll also find programming guides, user manuals, API reference, and other documentation to help you get started quickly accelerating your application with GPUs Introduction This guide is based upon Ubuntu LTS, but same principles apply in also to more recent versions of Ubuntu as well. Let's start Materials and Methods Hardware You must have a nVIDIA GPU that supports CUDA, otherwise you can't program in CUDA code. Here's a list with the CUDA supported GPU models. Installation 1- NVIDIA Proprietary drivers Either use our nVIDIA installer script or use Jockey (Additional Drivers) or just pick the driver you want from the NVIDIA official website . 2- Download CUDA Toolkit 5.0 for Ubuntu I used the Ubuntu 11.10 32bit version (it's the latest version so far). So please dowload . 3- Fix the libglut.so error There will be an error when you'll try to install the CUDA 5.0 examples. The driver is trying to find the libglut.so file and it doesn't look for other versions, such as so.1, so.2 etc. First confirm that you have a libglut file sudo find /usr -name libglut\\* if it does so, symlink that file to libglut.so for 64bit sudo ln -s /usr/lib/x86_64-linux-gnu/libglut.so.3 /usr/lib/libglut.so for 32bit sudo ln -s /usr/lib/i386-linux-gnu/libglut.so.3 /usr/lib/libglut.so 4- Install the CUDA Toolkit and Samples Press CTRL+ALT+F1 to open a shell -- yeah, we're going to do this in old CLI way, but there's no need to afraid the black and white terminal. 5- Shutdown the all the graphics Ubuntu uses lightdm, so you need to stop this service. sudo service lightdm stop 6- Run the installer Go to (cd) to the directory you have the CUDA installer (a file with *.run extension) and type the following: sudo chmod +x *.run sudo ./*.run Accept the Licence and Install only the CUDA 5 Toolkit and the Samples. DO NOT INSTALL the drivers because we have already done that. 7- Enable the nvcc compiler In order to compile CUDA code you have to use the nvcc compile. In that so you have to tweak some enviroment variables into your home bashrc file. 32 bit systems export PATH= $ PATH :/usr/local/cuda-5.0/bin export LD_LIBRARY_PATH=/usr/local/cuda-5.0/lib 64 bit systems export PATH= $ PATH :/usr/local/cuda-5.0/bin export LD_LIBRARY_PATH=/usr/local/cuda-5.0/lib64:/lib` If you want to compile a CUDA file (*.cu extension) you can use the following command: nvcc -o file file.cu ./file or use the NSight Eclipse Edition . Results and discussion I hope this guide is helpful for anyone starting to create GPU-accelerated applications","tags":"Deployment","loc":"http://utappia.org/how-to-install-cuda-toolkit-on-ubuntu.html","title":"How to install CUDA Toolkit on Ubuntu"},{"text":"While in game: Open console ( ~ ) Type ' record # ' (Replace # with desired filename). Once you're done recording what you want, type ' stop ' into console, then leave the game type \" timedemo # \" (Replace # with desired filename) to start benching if you want just to play the video (not benchmarking) then: type ' demoui ' or press Shift-F2 . Both will bring up the demo user interface. Once the UI is up, click ' load' to load your recording and begin to play it through like a movie. The game is playable even with Open Source nVIDIA drivers Nouveau, but the performance is not comparable to proprietary. Check the video below. Sorry for the Greek commentary, the video was meant for Ubuntu Greek Community at GPlus, so ... just see the performance: first video is Propritary. second video is Open Source.","tags":"Tuning - Optimization - Benchmarking","loc":"http://utappia.org/how-to-benchmark-with-team-fortress-2.html","title":"How to Benchmark with Team Fortress 2"},{"text":"Abstract First of all, Anti-aliasing is the opposite of Aliasing. By studying DSP (digital Signal Processing) you will find out that Aliasing is not a desirable result, thus we use its opposite filter to avoid it. We don't want aliasing in games, because it makes the edges look sharp and rough. Introduction Anti-aliasing is a low-pass filter, known as blur (in Photoshop) and AA in games. When you apply a low-pass filter into a digital image, you remove all the high frequencies. For example, let's say you have a low pass filter, from -5 to 5 Hz and you apply that filter in a signal which extends from -100 to 100 Hz. The new signal will contains only the frequencies that are in between -5 and 5 Hz area. So, there is this one called Aliasing frequency, that after this value the signal goes bad. As I mentioned earlier, in games, there are many sharp and rough edges. Materials and Methods lower than 22\" inches monitors Anti-aliasing is not noticeable in high resolutions on lower than 22\" inches monitors. In low resolutions, such as 800x600 or 1024x768 you can easily notice much better the aliasing effects because the pixels are big enough to oberve the jaggers. However, when you use a higher resolution, such as 1920x1080, it's very difficult to observe the difference between the two. As such, there is no point to enable Anti-Aniliasing Filtering in games with resolution @1920x1080, especially when you have performance issues. This \"A\" leter is suffering from aliasing. As you can see there are sharp edges, corners -- there is jaggering (zig-zag-zig-zag etc). This is a bad quality because the signal includes aliased frequencies (frequences beyond the Nyquist freq - aka Sampling Freq). To fix this problem, we apply a low pass filter, that cuts (removes) all these bad aliased frequencies. In other words, we use an Anti-Aliasing filter, fooling the eye and making the overall image quality looking way better than before. However if the resolution is too high, then you will hardly actually observe it. So when you play games like First Person Shooting, you don't have the time to notice such small glitches, especially if you play at high resolution (1920x1080). That's has been told, if you ever experience low performance issues, you can disable the Anti-Antiliasing and gain some FPS back. 24\" or 26\" inches monitors Anti-aliasing is noticeable in high resolutions and 24'' or 26'' inches monitor The bigger the screen, the larger the pixels. So, it's quite possible for some of you who have been trained in spotting game glitches, to identify aliased pixels even in high resolutions. That's when a 2x Anti-Aliasing technique is used. Impact in game performance Anti-Aliasing Filtering costs in game performance. When you enable Anti-Aliasing, your GPU has to reconstruct the signal (the digital image) and apply the Low-Pass filter. The more times the GPU scans the image (2x, 4x, 8x, 16x) the slower your game gets. So, if you want to apply Anti-Antiliasing filtering with 4x or 8x scans, make sure you have a fast enough GPU to perform the task, or you gonna have major drop in performance (lower FPS). Aliasing vs Anti-Aliasing This image \"Aliasing vs Anti-Aliasing in game difference\" is taken from TomsHardware. They have an EXCELLENT article about Anti-Aliasing and I strongly recommend you to read it. Results and Discussion Lets sum up what we have discussed Anti-Aliasing offers Improved image quality Smooths the edges Eliminates jaggering Anti-Aliasing impacts Costs in performance Not easily visible at higher resolutions Some types of AA, may seriously drop your performance (like Super Sampling Anti-Aliasing)","tags":"Gaming","loc":"http://utappia.org/anti-aliasing-in-games.html","title":"Anti-Aliasing in games"},{"text":"NVIDIA today announced the latest NVIDIA® GeForce® drivers -- R310 -- double the performance and dramatically reduce game loading times for those gaming on the Linux operating system. The result of almost a year of development by NVIDIA, Valve and other game developers, the new GeForce R310 drivers are designed to give GeForce customers the best possible Linux-based PC gaming experience -- and showcase the enormous potential of the world's biggest open-source operating system. Available for download at www.geforce.com , the new R310 drivers were also thoroughly tested with Steam for Linux, the extension of Valve's phenomenally popular Steam gaming platform that officially opened to gamers starting today. \"With this release, NVIDIA has managed to increase the overall gaming performance under Linux,\" said Doug Lombardi, vice president of marketing at Valve. \"NVIDIA took an unquestioned leadership position developing R310 drivers with us and other studios to provide an absolutely unequalled solution for Linux gamers.\" The R310 drivers support the newest GeForce GTX 600 series GPUs , which have redefined gaming for desktop and notebook PCs by combining revolutionary performance and gaming technology features with an incredibly power-efficient design. Gamers with previous generation GeForce GPUs, including the 8800 GT and above, are encouraged to download these new drivers aswell. For an up-to-date third-party listing of games and applications that are currently in development for Linux, visit the Marlamin site. For more information on how GeForce GTX GPUs are dramatically changing the way games are played and experienced on Linux, visit www.geforce.com . For more NVIDIA news, company and product information, videos, images and other information, visit the NVIDIA newsroom . The NVIDIA Flickr page hosts the entire lineup of GeForce product photos.","tags":"News","loc":"http://utappia.org/nvidia-304-64-r310-drivers-deliver-massive-performance-boost-to-linux-gaming.html","title":"NVIDIA 304.64 (R310) drivers Deliver Massive Performance Boost To Linux Gaming"},{"text":"Introduction If you want to change the default desktop environment (Unity) and install anything else in Ubuntu, then this article is for you. Just copy-paste the commands into your terminal, press enter ... wait a little bit for the packages to download and you are ready. Logout, pick your favourite Desktop Environment and log back in. It's insanely simple: Install KDE sudo apt-get install kde-standard sudo apt-get install kde-full Install GNOME 3 sudo add-apt-repository ppa:gnome3-team/gnome3 sudo apt-get update sudo apt-get install gnome-shell Install XFCE 4 sudo apt-get install xfce4 sudo apt-get install xfce4-goodies Install Cinammon sudo add-apt-repository ppa:gwendal-lebihan-dev/cinnamon-stable sudo apt-get update sudo apt-get install cinnamon Install FluxBOX sudo apt-get install fluxbox Install E17 sudo apt-add-repository ppa:hannes-janetzek/enlightenment-svn sudo apt-get update sudo apt-get install e17 Full Desktop Installation If you don't want to download and install the whole package, but just the desktop related features of Ubuntu alternatives, add the following parameter: --no-install-recommends Migrate to Kubuntu sudo apt-get install --no-install-recommends kubuntu-desktop Migrate to Xubuntu sudo apt-get install --no-install-recommends xubuntu-desktop Migrate to Lubuntu sudo apt-get install --no-install-recommends xubuntu-desktop Results and discussion You should consider testing first the above commands in a lab environment (Ubuntu in a VM) so to be safe and have a look ate the results before using them in your actual machine.","tags":"Deployment","loc":"http://utappia.org/how-to-change-desktop-environment-in-ubuntu.html","title":"How to change Desktop Environments in Ubuntu"},{"text":"Abstract Macbook air is one of the most successful products of Apple. Architecturally speaking, internally, Macs are PC's so installing Ubuntu is something that may be a viable option for users that want to dual-boot MacOSX with Ubuntu. Introduction Just in case you are curious enough or you simply want to act similar to Linus Torvalds using GNU/Linux in Apple's hardware (Macbook Air) then follow this guide. As you can see from my picture above, I've tested it and is working 100% running Ubuntu. Meterials and Methods Step 1: Install rEFIT boot menu In order to install more than one operating systems into your Macbook Air, you'll need a boot-loader called rEFIT -- a boot menu and maintenance toolkit for EFI-based machines like the Mac hardware. Once you have it installed, you can use it to boot multiple operating systems easily, including triple-boot setups eg. Windows 8, Mountain Lion and Ubuntu 12.10. Geek-wise, it also provides an easy way to enter and explore the EFI pre-boot environment. The current release is 0.14 and tt is available in various forms. However, we need Mac disk image only, double click the installer, set it up and click finish. The steps to install rEFIt this way are as follows: Download and mount the rEFIt-0.14.dmg disk image. Right-click and select Open on the \"rEFIt.mpkg\" package. Follow the instructions and select your Mac OS X installation volume as the destination volume for the install. In case your Mac OS X installation on the hard disk no longer boots, you can boot from the Mac OS X Install Disc (hold down the ‘C' key while booting) and run \"Startup Disk\" from the \"Utilities\" menu. Once you've rEFIT installed, run the Partition Inspector application and press Analyze button. If everything went well, you'll see the rEFIt boot menu on the next restart. Otherwise have a look at rEFI's documentation . Apart from troubleshooting advices, there are some useful tips for customizing your all-new bootloader. Just to make sure we're all in the same page here, before you go to the next step, make sure that the app is working. So reboot your system and if you see a startup menu like the one above, you' re good to go. If not ... try again! Last but not least, ignore the Linux penguin (aka Tux) icon, and boot into Mountain Lion (for now). How to Uninstall rEFIT To get rid of rEFIt, open the \"Startup Disk\" preference pane and select \"Mac OS X\" as the operating system to boot. This will re-bless your Mac OS X volume and instruct the firmware to boot from it. Then rename or delete the \"efi\" folder. Step 2: Make space for Ubuntu installation Supposing you use the full SSD disk's size, you have to resize it and free some space -- min 10GB -- for Ubuntu. Don't worry, there is nothing to afraid of... but just in case backup your most important data before make any changes to the disk. The utility we are going to use is called Disk Utility. How to resize and partition in Mountain Lion Open Disk Utility (Applications > Utilities > Disk Utility.) Select your hard drive from the list on the left, and click the Partition tab on the right. You'll see the current partition layout. Click the right corner of the current partition and shrink it to the size you want. The display will show you the minimum size, so don't worry about going too far. Alternatively, just select the current partition and type in the final size (total hard drive space - amount you want Ubuntu to have) in the Size field on the right. Click apply. Disk Utility will shrink the current partition for you and free up space for your Ubuntu install. Resize first and then press Apply button. The resizing process needs about 1 min to be completed. After that you are ready to install Ubuntu at the free space along with Mountain Lion in a such a beautiful dual boot configuration. Step 3: Prepare Ubuntu USB Flash disk As far as I am concerned there is no optical drive into Macbook Air. After all it's too thin and so much insanely designed for a CD drive. Hence, you are going to install Ubuntu via a bootable USB flash disk. If you have a Windows PC, fire up Unetbootin app. If you have another Ubuntu PC, use my version script from UbuntuForums.org -- but modify it according to your needs. Otherwise, if you are a Mac-lover only, this procedure requires that you create an .img file from the .iso file you download. How to prepare Ubuntu flash disk in Mountain Lion Open the Terminal (in /Applications/Utilities/ or query Terminal in Spotlight). Convert the .iso file to .img using the convert option of hdiutil (e.g.,hdiutil convert -format UDRW -o ~/path/to/target.img ~/path/to/ubuntu.iso) Run diskutil list to get the current list of devices. Insert your flash media. Run diskutil list again and determine the device node assigned to your flash media (e.g. /dev/disk2). Run diskutil unmountDisk /dev/diskN (replace N with the disk number from the last command; in the previous example, N would be 2). Execute sudo dd if=/path/to/downloaded.img of=/dev/rdiskN bs=1m (replace /path/to/downloaded.img with the path where the image file is located; for example, ./ubuntu.imgor ./ubuntu.dmg). Using /dev/rdisk instead of /dev/disk may be faster If you see the error dd: Invalid number '1m', you are using GNU dd. Use the same command but replace bs=1m with bs=1M If you see the error dd: /dev/diskN: Resource busy, make sure the disk is not in use. Start the 'Disk Utility.app' and unmount (don't eject) the drive Run diskutil eject /dev/diskN and remove your flash media when the command completes. Restart your Mac and press alt/option key while the Mac is restarting to choose the USB stick. Step 4: Install Ubuntu alongside with Mountain Lion Now that your USB flash disk is ready, restart Macbook and press ALT key in order to select your first boot device. Go with Flash disk instead of SSD and voila... Ubuntu 12.10 is booting! Furthermore, thanks to the modern Ubuntu installation wizard, you no longer have to create partitions manually but select the appropriate option. My wireless network was automatically detected, based on Broadcom Corporation BCM4322 802.11a/b/g/n chip. Hence, I had no problem with Ubuntu installation. Everything went smoothly. References Ubuntu Communitity Help Wiki: MacBookAir","tags":"Deployment","loc":"http://utappia.org/how-to-install-ubuntu-on-macbook-air-2011-mid.html","title":"How to install Ubuntu on Macbook Air 2011 mid"},{"text":"NVIDIA has released a new (beta) Linux graphics drivers for Linux community. The latest beta nVIDIA 310.14 driver is now available for download. This time nVIDIA comes with some new major changes, such as fixing (at laaaast) the Youtube-blue-face bug caused Adobe Flash and libvdpau. Next to that, VDPAU is optimized for significant improvement in moving windows, especially when you run some composite managers (simply put, compiz = Unity). Further more official support for OpenGL 4.3 has been added. What else you might ask ? Do you remember the hiding bar bug at Ubuntu? Now it's gone! Last but not least, there are some improvement to laptop backlight technology using RanR. by Simply put, this is a must have beta version. For more information take a look at the changelog below: 310.14 Changelog Implemented workarounds for two Adobe Flash bugs by applying libvdpau commit ca9e637c61e80145f0625a590c91429db67d0a40 to the version of libvdpau shipped with the NVIDIA driver. Fixed an issue which affected the performance of moving windows of VDPAU applications when run in some composite managers. Added unofficial GLX protocol support (i.e., for GLX indirect rendering) for the GL_ARB_pixel_buffer_object OpenGL extension. Added support for HDMI 3D Stereo with Quadro Kepler and later GPUs. See the documentation for the \"Stereo\" X configuration option in the README for details. Added experimental support for OpenGL threaded optimizations, available through the __GL_THREADED_OPTIMIZATIONS environment variable. For more information, please refer to the \"Threaded Optimizations\" section in chapter \"Specifying OpenGL Environment Variable Settings\" of the README. Improved performance and responsiveness of windowed OpenGL applications running inside a Unity session. Added support for OpenGL 4.3. Added support for the \"Backlight\" RandR output property for configuring the brightness of some notebook internal panels. Fixed a bug that prevented the Ubuntu Unity launcher panel from unhiding: https://bugs.launchpad.net/unity/+bug/1057000 Fixed a bug that caused nvidia-installer to sometimes attempt to write a log file in a nonexistent directory. Fixed a bug that caused incorrect input transformation after resizing an NVIDIA X screen with xserver ABI 12 (xorg-server 1.12) or newer. Fixed a bug that caused GLX to leak memory when Xinerama is enabled. Here is a list of Supported Cards: GeForce 600 series: GTX 690, GTX 680, GTX 670, GTX 660 Ti, GTX 660, GTX 650, GT 645, GT 640, GT 630, GT 620, GT 610, 605 GeForce 600M series: GTX 680M, GTX 675M, GTX 670M, GTX 660M, GT 650M, GT 640M LE, GT 640M, GT 635M, GT 630M, GT 620M, G610M GeForce 500 series: GTX 590, GTX 580, GTX 570, GTX 560 Ti, GTX 560, GTX 550 Ti, GT 545, GT 530, GT 520, 510 GeForce 500M series: GTX 580M, GTX 570M, GTX 560M, GT 555M, GT 550M, GT 540M, GT 525M, GT 520MX, GT 520M GeForce 400 series: GTX 480, GTX 470, GTX 465, GTX 460 SE v2, GTX 460 SE, GTX 460, GTS 450, GT 440, GT 430, GT 420, 405 GeForce 400M series: GTX 485M, GTX 480M, GTX 470M, GTX 460M, GT 445M, GT 435M, GT 425M, GT 420M, GT 415M, 410M GeForce 300 series: GT 340, GT 330, GT 320, 315, 310 GeForce 300M series: GTS 360M, GTS 350M, GT 335M, GT 330M, GT 325M, GT 320M, 320M, 315M, 310M, 305M GeForce 200 series: GTX 295, GTX 285, GTX 280, GTX 275, GTX 260, GTS 250, GTS 240, GT 240, GT 230, GT 220, G210, 210, 205 GeForce 200M series: GTX 285M, GTX 280M, GTX 260M, GTS 260M, GTS 250M, GT 240M, GT 230M, GT 220M, G210M GeForce 100 series: GT 140, GT 130, GT 120, G 100 GeForce 100M series: GTS 160M, GTS 150M, GT 130M, GT 120M, G 110M, G 105M, G 103M, G 102M GeForce 9 series: 9800 GX2, 9800 GTX+, 9800 GTX/GTX+, 9800 GT, 9650 S, 9600 GT, 9600 GSO 512, 9600 GSO, 9600 GS, 9500 GT, 9500 GS, 9400 GT, 9400, 9300 SE, 9300 GS, 9300 GE, 9300 / nForce 730i, 9300, 9200, 9100 GeForce 9M series: 9800M GTX, 9800M GTS, 9800M GT, 9800M GS, 9700M GTS, 9700M GT, 9650M GT, 9650M GS, 9600M GT, 9600M GS, 9500M GS, 9500M G, 9400M G, 9400M, 9300M GS, 9300M G, 9200M GS, 9100M G GeForce 8 series: 8800 Ultra, 8800 GTX, 8800 GTS 512, 8800 GTS, 8800 GT, 8800 GS, 8600 GTS, 8600 GS, 8500 GT, 8400 SE, 8400 GS, 8400, 8300 GS, 8300, 8200, 8100 / nForce 720a GeForce 8M series: 8800M GTX, 8800M GTS, 8700M GT, 8600M GT, 8600M GS, 8400M GT, 8400M GS, 8400M G, 8200M G GeForce 7 series: 7950 GX2, 7950 GT, 7900 GTX, 7900 GT/GTO, 7900 GS, 7800 SLI, 7800 GTX, 7800 GT, 7800 GS, 7650 GS, 7600 LE, 7600 GT, 7600 GS, 7500 LE, 7350 LE, 7300 SE / 7200 GS, 7300 LE, 7300 GT, 7300 GS, 7150M /NVIDIA nForce 630M, 7150 / NVIDIA nForce 630i, 7100 GS, 7100 / NVIDIA nForce 630i, 7050 PV / NVIDIA nForce 630a, 7050 / NVIDIA nForce 630i, 7050 / nForce 620i, 7025 / NVIDIA nForce 630a, 7000M /NVIDIA nForce 610M GeForce Go 7 series: Go 7950 GTX, Go 7900 GS, Go 7800 GTX, Go 7800, Go 7700, Go 7600 GT, Go 7600, Go 7400, Go 7300, Go 7200 GeForce 6 series: 6800 XT, 6800 XE, 6800 Ultra, 6800 LE, 6800 GT, 6800 GS, 6800, 6700 XL, 6610 XL, 6600 VE, 6600 LE, 6600 GT, 6600, 6500, 6250, 6200 TurboCache, 6200SE TurboCache, 6200 LE, 6200 A-LE, 6200, 6150SE nForce 430, 6150 LE, 6150, 6100 nForce 420, 6100 nForce 405, 6100 nForce 400, 6100 NVS Series: NVS 510, NVS 310, NVS 300 Quadro series: K5000, 7000, 6000, 600, 5000, 410, 4000, 400, 2000D, 2000 Quadro FX series: FX Go1400, FX 5800, FX 580, FX 570, FX 5600, FX 560, FX 5500, FX 550, FX 540, FX 4800, FX 4700 X2, FX 4600, FX 4500 X2, FX 4500, FX 4000, FX 380 LP, FX 3800, FX 380, FX 370 Low Profile, FX 3700, FX 370, FX 3500, FX 350, FX 3450/4000 SDI, FX 3400/4400, FX 1800, FX 1700, FX 1500, FX 1400, CX Quadro Notebook series: K5000M, K4000M, K3000M, K2000M, K1000M, 5010M, 5000M, 4000M, 3000M, 2000M, 1000M Quadro FX Notebook series: FX 880M, FX 770M, FX 570M, FX 560M, FX 540M, FX 380M, FX 3800M, FX 370M, FX 3700M, FX 360M, FX 3600M, FX 350M, FX 2800M, FX 2700M, FX 2500M, FX 1800M, FX 1700M, FX 1600M, FX 1500M Quadro NVS series: NVS 450, NVS 440, NVS 420, NVS 295, NVS 290, NVS 285, NVS 210S / 6150LE Quadro NVS Notebook series: NVS 5400M, NVS 5200M, NVS 510M, NVS 4200M, NVS 320M, NVS 160M, NVS 150M, NVS 140M, NVS 135M, NVS 130M, NVS 120M, NVS 110M Quadro Plex series: Model IV, Model II, D Series, 7000 Quadro G-Sync series: G-Sync II Quadro SDI series: Quadro SDI ION series: ION LE, ION C-Class Processors: Tesla C870, Tesla C2075, Tesla C2070, Tesla C2050, Tesla C1060, T10 Processor M-Class Processors: Tesla M2090, Tesla M2075, Tesla M2070-Q, Tesla M2070, Tesla M2050, Tesla M1060 X-Class Processors: Tesla X2090 K-Series Processors: Tesla K10 How to Install 310.14 You can use our Nvidia Installer Script to help you install the latest drivers or to unistall the drivers in case you have problems . Or for more detailed installation without our script please read our guide How to install or upgrade Nvidia Video Drivers After the reboot, open Dash and type \" nvidia \". Using this tool you can configure all these nvidia settings :)","tags":"Maintenance","loc":"http://utappia.org/how-to-install-nvidia-310-14-drivers-major-changes.html","title":"How to install nVIDIA 310.14 drivers, major changes"},{"text":"Abstract Battery life on laptops and thus power saving is crucial for laptop users. Linux users have the benefit of the tools that are provided by the community so the they can get the most out of the \"battery juice\". Introduction Three of the most power consumption monsters in a Laptop is the Graphics Card , Hard Disk and the CPU . Nowadays most of the latest CPUS's have Dynamic CPU frequency scaling (also known as CPU throttling) which is a technique in computer architecture where a processor is run at a less-than-maximum frequency in order to conserve power. Linux Kernel utilize this feature by automatically enabling the so-called Governance (Performance, On-Demand, Conservative, Power-save) For example if you manually set the Power-save state (with CPUfrequtils), you \"tell your kernel\" to try to increase the battery life of your laptop. The next too parts (Graphics Card, Hard Disk) have also a Power Saving modes but they are not always utilized well by the Linux Kernel. Personally, the one that I find most annoying when I use my laptop is that the Hard Disk never spins down to conserve power and therefore it decreases the battery life of my laptop. Increase the battery life with Laptop Mode Tools Laptop Mode Tools is a laptop power saving package for Linux systems. It allows you to increase the battery life of your laptop, in several ways. It is the primary way to enable the Laptop Mode feature of the Linux kernel, which lets your hard drive spin down . In addition, it allows you to tweak a number of other power-related settings using a simple configuration file. How to install Laptop Mode Tools According to its developer you should use the latest Debian package which is compatible with Ubuntu because the one that ships on Ubuntu Software Center is crippled so that some options don't work, the most notable of which are ENABLE_LAPTOP_MODE_ON_AC ENABLE_LAPTOP_MODE_WHEN_LID_CLOSED DISABLE_LAPTOP_MODE_ON_CRITICAL_BATTERY_LEVEL Supported 2.6.6+ Linux Kernel Mirrors of the latest version After you have downloaded the package, double-click and install it. Once installed you don't need to do anything ! If everything went OK, laptop mode will be activated automatically the next time you unplug your laptop from the mains. Tweak Laptop Mode Tools If you are curious about the options available for Laptop mode Tools (I bet you are !) you can make some minor changes to its configuration file to make it correspond to your personal needs. Open as administrator/root/sudo the file at /etc/laptop-mode/laptop-mode.conf Read carefully the available options and only make changes to the one that you are sure about Save it and close it! You are done Results and discussion For reference here are my changes : # # The drives that laptop mode controls. # Separate them by a space, e.g. HD=\"/dev/hda /dev/hdb\". The default is a wildcard, which will get you all your IDE and SCSI/SATA drives. # HD=\"/dev/sda\" # # The partitions (or mount points) that laptop mode controls. # Separate the values by spaces. Use \"auto\" to indicate all partitions on drives # listed in HD. You can add things to \"auto\", e.g. \"auto /dev/hdc3\". You can also specify mount points, e.g. \"/mnt/data\". # PARTITIONS=\"auto /dev/sda\\*\" ........ # # Read-ahead, in kilobytes. You can spin down the disk while playing MP3/OGG # by setting the disk readahead to a reasonable size, e.g. 3072 (3 MB). # Effectively, the disk will read a complete MP3 at once, and will then spin down while the MP3/OGG is playing. Don't set this too high, because the readahead is applied to _all_ files that are read from disk. # LM_READAHEAD=6072 NOLM_READAHEAD=128 Also, it is valuable to read the Frequently Asked Questions about Laptop Mode Tool , so please read some ports that I thought are important and if you have more I include the link for more information How do I check if laptop mode is enabled? Execute cat /proc/sys/vm/laptop_mode. If it contains a nonzero value, then laptop mode is enabled, if it says 0, then it isn't. I have a solid-state disk (SSD) in my machine. Should I enable any of the disk-related parts of laptop-mode-tools, or are they irrelevant? They may be relevant, because (a) laptop mode will reduce the number of writes, which improves the lifetime of an SSD, and (b) laptop mode makes writes bursty, which enables power saving mechanisms like ALPM to kick in. However, your mileage may vary depending on the specific hardware involved. For some hardware you will get no gain at all, for some the gain may be substantial. Spinning down too many times may kill hard drives Desktop hard drives are usually rated for only 40,000-50,000 spinups, and one spinup every 10 minutes will kill your 40,000-spinup HD in 277 days. So this is NOT recommended for server use, unless you increase the spinup interval dramatically, to say once every hour or two. Laptop hard drives are usually rated for around 300,000 spinups, so those will last about 2083 days or 6 years if you have them powered on 24-7. I have an SATA disk and it doesn't work. Spindown timeouts don't currently work on SATA drives, because the Linux kernel does not support that properly. There are patches available that add this support. Check out http://www.thinkwiki.org/wiki/Problems_with_SATA_and_Linux for all SATA-on-Linux problems. For laptop mode to work, you want the libata_passthru patch. It will be included in the Linux kernel starting from version 2.6.15. Note: You also need a recent version of hdparm in order to make this work! If my machine crashes or runs out of power, will I lose all my work? If you have laptop mode enabled and your machine crashes, then you will lose up to MAX_LOST_WORK_SECONDS seconds of work. If you really need to have something written to disk, issue the \"sync\" command. If you have laptop mode enabled and your machine runs out of power, you will not lose as much work (provided you have an ACPI laptop, as most current PC laptops are) because laptop mode is automatically disabled when the battery almost runs out. What is the relationship between Laptop Mode Tools and the script in the kernel documentation? Laptop Mode Tools is a fork of the script in the kernel documentation. The script in the kernel documentation is currently pretty much unmaintained AFAIK, so I don't recommend using it. I set PARTITIONS and now it doesn't work anymore at all. You have to include the default partitions (the partitions of the drives listed in the HD configuration setting) as well. In version 1.06 and higher you can use the \"auto\" keyword to indicate \"and remount all of the default ones as well\". \"Default\" here means \"partitions that contain the device name of a hard drive in HD\", i.e. if your partition is /dev/hda3 and you have HD=/dev/hda, then /dev/hda3 is part of the default partitions, but if it is aptly named /dev/hdx7 then it isn't. :) I set REMOUNT_PARTITIONS to \"/ /mnt /usr\" and it doesn't work. You have to include the partitions' devices, not their mount points. So you should list things like \"/dev/hda2 /dev/hdb1\". If you're using version 1.06 or higher than you don't have this problem, as this version supports mount points as well as device names in REMOUNT_PARTITIONS (or PARTITIONS, as it's called in the new config file format introduced in version 1.07). References Laptop Mode Tools: FAQ Arch Wiki : laptop-mode-tools","tags":"Hardware","loc":"http://utappia.org/how-to-increase-the-battery-life-of-your-laptop-netbook.html","title":"How to increase the battery life of your laptop - netbook"},{"text":"Abstract In this article we will present you how to install OGRE SDK, compiling it from source. Even though we are aware that compiling is not recommended in Ubuntu, in this particular program is vital to do so. Introduction OGRE ( O bject-Oriented G raphics R endering E ngine) is a scene-oriented, flexible 3D engine written in C++ designed to make it easier and more intuitive for developers to produce applications utilizing hardware-accelerated 3D graphics. The class library abstracts all the details of using the underlying system libraries like Direct3D and OpenGL and provides an interface based on world objects and other intuitive classes. What can it do? Lots of things! See the features page for an up-to-date list of the current features. Also, take a look at the screenshots page to see for yourself the kinds of eye candy OGRE can pump out. Is OGRE a Game Engine? No. OGRE can be (and indeed has been) used to make games, but OGRE is deliberately designed to provide just a world-class graphics solution; for other features like sound, networking, AI, collision, physics etc, you will need to integrate it with other libraries, something several frameworks have done, and we have a collision / physics reference integration library as an example in our distribution. For more information click here . Materials and Methods 1. Install Depedencies As stated before, we are going to use the compile method instead of apt-get. Thus, you need you have installed all the necessary programs to do the job. sudo apt-get install build-essential automake libtool Next, you need to install the libraries required for OGRE. Compile-wise, you need the *.-dev packages. Type: sudo apt-get install libfreetype6-dev libfreeimage-dev libzzip-dev libxrandr-dev libxaw7-dev freeglut3-dev libgl1-mesa-dev libglu1-mesa-dev libxt-dev libpng12-dev libglew1.6-dev 2. Download OGRE SDK Source First off you need to understand what version you would like to install. Personally, as being a beginner to OGRE I recommend you to install the stable branch. Here's a brief explanation of what there is available to the public. Development (default) branch : this is the latest development version where all the new features are being added. This is fine if you want to see the very latest features, but it is inherently the least stable version, and there may be interface-breaking changes going on here. Only use the trunk if you are confident in your ability to handle the odd problem. Maintenance branches : these are branches where the API is stable within a major version. Only bugfixes are applied to these branches, and no interface-breaking changes. Only one maintenance branch is actively maintained, representing the current stable version, but others may be present from previous stables. The maintenance branches are named after the stable major version, such as ‘v1-6′ or ‘v1-7′. The latest of these is the best branch to use if you want to keep up with the latest fixes, but need a stable development platform.[/tab] Download OGRE's Maintenance stable version ogre3d. OGRE Source 3. Compile OGRE SDK Once you have extracted OGRE into /home dir, then go in that folder in terminal way. Pay attention that in the following example, I have downloaded OGRE 1.8.1 version, thus the name scheme applying is ogre_src_v1-8-1. cd ogre_src_v1-8-1/ Create an empty directory, called \"Build\" and get inside: mkdir Build cd Build Trigger cmake, passing path to Ogre source directory in order to create a regular makefile. Ogre uses cmake instead of ./configure: cmake .. Normally you can just run 'make' but if you have multiple cores, you can decrease your compile time by doing this: make -j`getconf _NPROCESSORS_ONLN` Once compilation is successful, you can install into the system (by default, /usr/local): sudo make install Otherwise, you can cmake and build OGRE using IDE, such as CodeBlocks, KDevelop or Eclipse. However, I like more using the terminal and gedit, rather than IDEs. Code blocks is a well-known IDE for programming. If you want to build OGRE through Code::Blocks then setup your cmake parameters properly. cmake -G \"CodeBlocks - Unix Makefiles\" .. More information about Building project with Codeblocks can be found here Kdevelop4 is very nice, easy-to-use and modern IDE. After getting source, just open Kdevelop and click \"Project -> Open/Import Project...\" and show path to code (~/ogre_src_v1-8-1). You will have to choose build folder (eg /home/drpaneas/ogre_src_v1-8-1/build). Then wait a little bit for KDevelop to load and index the project files. For building click on button \"Build Selection\". For running click \"Execute\". Running first time \"Launch Configurations\" will pop up. You have to set executable file by selecting \"ogre_src_v1-8-1\", clicking \"+\" icon and choosing under (Launch Configuration) Executable \"/home/drpaneas/ogre_src_v1-8-1/build/bin/SampleBrowser_d\" as \"Project Target\".Then Run it (Shift+F9). More information here ... Select \"C/C++ / Makefile project with existing code\" as project type. In \"Existing code location\", click browse, and again,select openmw's folder. Also select \"Linux GCC\" as toolchain, then click \"Finish\". Now right-click on your project, and select \"Properties\". Go to \"C/C++ build\", uncheck \"use default build command\", and specify your command, likemake -j 4 -C ${ProjDirPath}../build That's it. Now you are able to launch the SampleBrowser, located at /Build/bin/ directory at your OGRE project. Results and discussion When you launch SampleBrowser for the very first time, it asks you to choose your Renderer. Being in Linux and native in Ubuntu, you have no choice but select OpenGL Rendering Subsystem; then click Accept. This is the menu of SampleBrowser. In there you can configure your settings and test any sample project that comes with OGRE SDK by default. Also, bare in mind that you are able to see the source code of any of these samples. OGRE Wiki","tags":"Deployment","loc":"http://utappia.org/how-to-install-ogre-sdk-from-source.html","title":"How to install OGRE SDK from source"},{"text":"Today NVIDIA has released a new (stable) Linux graphics drivers for the Linux community. The latest beta nVIDIA 304.51 driver is now available for download and offers support for the new models of GeForce GTX 6xx series, meaning GTX650 and GTX600. Simply put, this is the stable version for 304.48 -- the last week's beta driver. For more information take a look at the changelog below: - Fixed RandR per-CRTC gamma persistence across modeswitches and VT-switches. - An X.Org Server hang on input. - A performance regression fix for some 2D/X11 rendering operations that affected some graphics cards since the Linux 290 series. - A correction so PowerMizer works properly on some GDDR5 graphics cards. - Support for the GeForce GTX 650 and GeForce GTX 660. - A bug fix for OpenGL applications not animating properly when a rotation or transformation was applied. - A fix for NVIDIA-Settings to handle \"Reset Hardware Defaults\". - FXAA anti-aliasing for Unified Back Buffers. You can use our Nvidia Installer Script to help you install the latest drivers or to unistall the drivers in case you have problems . Or for more detailed installation without our script please read our guide How to install or upgrade Nvidia Video Drivers After the reboot, open Dash and type \" nvidia \". Using this tool you can configure all these nvidia settings :)","tags":"Maintenance","loc":"http://utappia.org/how-to-install-nvidia-304-51-drivers-in-ubuntu.html","title":"How to install nNVIDIA 304.51 drivers in Ubuntu"},{"text":"Today NVIDIA has released a new (beta) Linux graphics drivers for Linux community. The latest beta nVIDIA 304.48 driver is now available for download and offers support for the new models of GeForce GTX 6xx series, meaning GTX650 and GTX600. For more information take a look at the changelog below: 304.48 Changelog Fixed RandR per-CRTC gamma persistence across modeswitches and VT-switches. An X.Org Server hang on input. A performance regression fix for some 2D/X11 rendering operations that affected some graphics cards since the Linux 290 series. A correction so PowerMizer works properly on some GDDR5 graphics cards. Support for the GeForce GTX 650 and GeForce GTX 660. A bug fix for OpenGL applications not animating properly when a rotation or transformation was applied. A fix for NVIDIA-Settings to handle \"Reset Hardware Defaults\". FXAA anti-aliasing for Unified Back Buffers. Here is a list of Supported Cards GeForce 600 series: GTX 690, GTX 680, GTX 670, GTX 660 Ti, GTX 660, GTX 650, GT 645, GT 640, GT 630, GT 620, GT 610, 605 GeForce 600M series: GTX 680M, GTX 675M, GTX 670M, GTX 660M, GT 650M, GT 640M LE, GT 640M, GT 635M, GT 630M, GT 620M, G610M GeForce 500 series: GTX 590, GTX 580, GTX 570, GTX 560 Ti, GTX 560, GTX 550 Ti, GT 545, GT 530, GT 520, 510 GeForce 500M series: GTX 580M, GTX 570M, GTX 560M, GT 555M, GT 550M, GT 540M, GT 525M, GT 520MX, GT 520M GeForce 400 series: GTX 480, GTX 470, GTX 465, GTX 460 SE v2, GTX 460 SE, GTX 460, GTS 450, GT 440, GT 430, GT 420, 405 GeForce 400M series: GTX 485M, GTX 480M, GTX 470M, GTX 460M, GT 445M, GT 435M, GT 425M, GT 420M, GT 415M, 410M GeForce 300 series: GT 340, GT 330, GT 320, 315, 310 GeForce 300M series: GTS 360M, GTS 350M, GT 335M, GT 330M, GT 325M, GT 320M, 320M, 315M, 310M, 305M GeForce 200 series: GTX 295, GTX 285, GTX 280, GTX 275, GTX 260, GTS 250, GTS 240, GT 240, GT 230, GT 220, G210, 210, 205 GeForce 200M series: GTX 285M, GTX 280M, GTX 260M, GTS 260M, GTS 250M, GT 240M, GT 230M, GT 220M, G210M GeForce 100 series: GT 140, GT 130, GT 120, G 100 GeForce 100M series: GTS 160M, GTS 150M, GT 130M, GT 120M, G 110M, G 105M, G 103M, G 102M GeForce 9 series: 9800 GX2, 9800 GTX+, 9800 GTX/GTX+, 9800 GT, 9650 S, 9600 GT, 9600 GSO 512, 9600 GSO, 9600 GS, 9500 GT, 9500 GS, 9400 GT, 9400, 9300 SE, 9300 GS, 9300 GE, 9300 / nForce 730i, 9300, 9200, 9100 GeForce 9M series: 9800M GTX, 9800M GTS, 9800M GT, 9800M GS, 9700M GTS, 9700M GT, 9650M GT, 9650M GS, 9600M GT, 9600M GS, 9500M GS, 9500M G, 9400M G, 9400M, 9300M GS, 9300M G, 9200M GS, 9100M G GeForce 8 series: 8800 Ultra, 8800 GTX, 8800 GTS 512, 8800 GTS, 8800 GT, 8800 GS, 8600 GTS, 8600 GS, 8500 GT, 8400 SE, 8400 GS, 8400, 8300 GS, 8300, 8200, 8100 / nForce 720a GeForce 8M series: 8800M GTX, 8800M GTS, 8700M GT, 8600M GT, 8600M GS, 8400M GT, 8400M GS, 8400M G, 8200M G GeForce 7 series: 7950 GX2, 7950 GT, 7900 GTX, 7900 GT/GTO, 7900 GS, 7800 SLI, 7800 GTX, 7800 GT, 7800 GS, 7650 GS, 7600 LE, 7600 GT, 7600 GS, 7500 LE, 7350 LE, 7300 SE / 7200 GS, 7300 LE, 7300 GT, 7300 GS, 7150M /NVIDIA nForce 630M, 7150 / NVIDIA nForce 630i, 7100 GS, 7100 / NVIDIA nForce 630i, 7050 PV / NVIDIA nForce 630a, 7050 / NVIDIA nForce 630i, 7050 / nForce 620i, 7025 / NVIDIA nForce 630a, 7000M /NVIDIA nForce 610M GeForce Go 7 series: Go 7950 GTX, Go 7900 GS, Go 7800 GTX, Go 7800, Go 7700, Go 7600 GT, Go 7600, Go 7400, Go 7300, Go 7200 GeForce 6 series: 6800 XT, 6800 XE, 6800 Ultra, 6800 LE, 6800 GT, 6800 GS, 6800, 6700 XL, 6610 XL, 6600 VE, 6600 LE, 6600 GT, 6600, 6500, 6250, 6200 TurboCache, 6200SE TurboCache, 6200 LE, 6200 A-LE, 6200, 6150SE nForce 430, 6150 LE, 6150, 6100 nForce 420, 6100 nForce 405, 6100 nForce 400, 6100 NVS Series: NVS 510, NVS 310, NVS 300 Quadro series: K5000, 7000, 6000, 600, 5000, 410, 4000, 400, 2000D, 2000 Quadro FX series: FX Go1400, FX 5800, FX 580, FX 570, FX 5600, FX 560, FX 5500, FX 550, FX 540, FX 4800, FX 4700 X2, FX 4600, FX 4500 X2, FX 4500, FX 4000, FX 380 LP, FX 3800, FX 380, FX 370 Low Profile, FX 3700, FX 370, FX 3500, FX 350, FX 3450/4000 SDI, FX 3400/4400, FX 1800, FX 1700, FX 1500, FX 1400, CX Quadro Notebook series: K5000M, K4000M, K3000M, K2000M, K1000M, 5010M, 5000M, 4000M, 3000M, 2000M, 1000M Quadro FX Notebook series: FX 880M, FX 770M, FX 570M, FX 560M, FX 540M, FX 380M, FX 3800M, FX 370M, FX 3700M, FX 360M, FX 3600M, FX 350M, FX 2800M, FX 2700M, FX 2500M, FX 1800M, FX 1700M, FX 1600M, FX 1500M Quadro NVS series: NVS 450, NVS 440, NVS 420, NVS 295, NVS 290, NVS 285, NVS 210S / 6150LE Quadro NVS Notebook series: NVS 5400M, NVS 5200M, NVS 510M, NVS 4200M, NVS 320M, NVS 160M, NVS 150M, NVS 140M, NVS 135M, NVS 130M, NVS 120M, NVS 110M Quadro Plex series: Model IV, Model II, D Series, 7000 Quadro G-Sync series: G-Sync II Quadro SDI series: Quadro SDI ION series: ION LE, ION C-Class Processors: Tesla C870, Tesla C2075, Tesla C2070, Tesla C2050, Tesla C1060, T10 Processor M-Class Processors: Tesla M2090, Tesla M2075, Tesla M2070-Q, Tesla M2070, Tesla M2050, Tesla M1060 X-Class Processors: Tesla X2090 K-Series Processors: Tesla K10 How to Install 304.48 You can use our Nvidia Installer Script to help you install the latest drivers or to unistall the drivers in case you have problems . Or for more detailed installation without our script please read our guide How to install or upgrade Nvidia Video Drivers After the reboot, open Dash and type \" nvidia \". Using this tool you can configure all these nvidia settings :)","tags":"Maintenance","loc":"http://utappia.org/nvidia-304-48-drivers-released-install-guide.html","title":"nVIDIA 304.48 drivers released - Install Guide"},{"text":"Abstract The latest AMD Catalyst 12.9 was released yesterday (13/9/12) . The most significant change here is that Catalyst 9 improves your embedded Radeongraphics . For example if you're using a netbook with an AMD CPU, then you have better support for its embedded IGPU, like E6760, E6460 etc. Last but not least, the AMD hasn't updated their website, thus this link is located under embedded graphics, not PC Desktop. Hopefully they will update their website during the next 24 hours. Introduction Here is the changlog from the new version of the driver Changelog Fix startx failure on PowerXpress A+A platforms Fix performance downgrade with 3DMarkVantage Fix startx failure on some specific ASICs Fix PowerPlay settings not persistent after reboot Fix problem that the hardware information is shown twice in AMD CCC:LE for Power Saving mode of PowerXpress A+A Fix severe corruption when switch between multiple X servers Fix cursor disappear when open AMD CCC:LE with specific steps Fix suspend/resume hang on PowerXpress A+A in Power-Saving mode Fix system hang after panning Fix system font change after enable Xinerama Fix X crash when run 32bit AMD CCC:LE on 64bit system Fix the issue that monitor goes into sleep for some ASICs after kill X Materials and Methods Click to download the drivers for 64/32 bit (the package contains both the 32-bit and 64-bit driver.). Download 32/64bit Currently you can't install this driver using Xorg-Edgers PPA because the repository has not been updated yet. You have to built it by you own following the hard(manual) way. If you install the AMD Catalyst for the first time then follow the following procedure Binary Installation Install prerequisite packages sudo apt-get install build-essential cdbs dh-make dkms sudo apt-get install execstack dh-modaliases fakeroot libqtgui4 If you are 64 bit, install these too sudo apt-get install ia32-libs ia32-libs-multiarch:i386 sudo apt-get install lib32gcc1 libc6-i386 cd /usr ; sudo ln -svT lib /usr/lib64 Now go into your Downloads folder (I suppose you have already download the driver), make the package executable, create and install deb packages cd Downloads chmod +x amd-driver-installer-8.982-x86.x86_64.run sudo sh ./amd-driver-installer-8.982-x86.x86_64.run --buildpkg Ubuntu/precise sudo dpkg -i fglrx*.deb Now enable new settings sudo aticonfig --initial -f Binary Upgrade If you are to Upgrade from AMD Catalyst 12.6 to 12.8 then follow the following procedure: Go into your Downloads folder (I suppose you have already download the driver), make the package executable, create deb packages, force overwrite the older packages with the new ones cd Downloads chmod +x amd-driver-installer-8.982-x86.x86_64.run sudo sh ./amd-driver-installer-8.982-x86.x86_64.run --buildpkg Ubuntu/precise sudo dpkg --force-overwrite -i *.deb Now reboot you PC. Binary Uninstall If want to unistall them sudo apt-get --purge autoremove fglrx fglrx_* fglrx-amdcccle* fglrx-dev*","tags":"Maintenance","loc":"http://utappia.org/amd-catalyst-12-9-install-guide-ubuntu.html","title":"AMD Catalyst 12.9 released - Install Guide (updated)"},{"text":"Abstract Desura is a digital distribution service for gamers. In other words its a Steam like software client that acts like Ubuntu Software Center but rather using it for software it is used for downloading Free or Commercial games. Introduction While Steam is on its way of being available on Linux, Desura is already here, almost a year now, when it was released on November 16 of 2011. With Desura you just search and click the \"Install Game\" button on the client software or the website to play a game. It's worth noting that the games are packaged along with any libraries they may be dependent on so that Linux user will not need to download any dependencies or add any repository. Content hosted on Desura primarily falls into the category of Indie games, which are games by smaller developers who do not have the same amount of name or clout to negotiate deals with Steam . Also Desura has more a community building approach that promotes community mods ( game modifications ) and better relationships between player and developer The Beginning of Desura Desura project was first publicly announced on December 16, 2009 and the initial Windows client was finally released to the public on December 18, 2010. Development on a Linux client was announced during the Summer of 2011 utilizing wxWidgets and GTK+ as the toolkit and was introduced in a limited beta program in the Fall. The client was publicly available for download on November 16, 2011 the Desura Linux client was publicly released with an initial offering of over 65 games. Project \"Desurium\" On November 9, 2011 it was announced that Desura would release the client itself under the GNU General Public License, while the server-side portion of the distribution platform would remain proprietary. The media assets and trademarks would also remain property of DesuraNET. The free software release and development is handled in a manner similar to Google's Chromium project. The free project, named \"Desurium\", was publicly made available on January 21, 2012. Review of Desura for Linux We will focus on the Linux version of Desura client but in general Desura is pretty much the same as the one on the other platforms. We will talk about the client, website and the games in general. Desura Website The website its self is designed in the same way as the desura client providing consistent experience. For example as a 64bit Linux user you can go through the Desura website, then click on the 64bit penguin, search a game, buy it or click install, press \"Desura is installed\" and then the Desura client will take care the rest by installing and keeping up to date that game on any computer you log in on with the Desura Client. How to start using Desura Please follow the step by step guide: Visit Desura Website : http://www.desura.com/members/register Complete the account creation procedure Download Desura For Linux http://www.desura.com/install Extract the folder and move the desura folder in to your Home folder (and keep it there) Double click the \"desura\" executable that will expand and download the required files and libraries and add menu items that can be searched in Ubuntu Dash After the installation you double click the new desura executable or type \"Desura\" on Dash and press enter to start and login to Desura Client Desura Client The first thing you will notice is the similarities of Desura Client with the website. It has: Major Sections (Username, Play, Games, Community, Development, Support) Tabs (New games, Most popular...) Game Categories (Action, Adventure, Strategy, MMO...) Downloaded and Purchased Games Every installed game is maintained with updates and if there is one you will be prompt to update it through Desura Client. If for any reason you wish to uninstall the client software you can install it again at later time and download automatically all your previous games. One interesting and engaging feature is the social side of the platform which gives users the ability to upload screenshots, rate and write reviews on games. Besides that are able to add friends, see what they're playing and share your thoughts on games with them and Desura community and Developers. Every game available belongs to a descriptive categorization, it has screenshots, extensive description, video preview, ratings, forum and user comments. List of Free games There are options for browsing games by category and popularity and tracking options to be notified about updates to the profiles of games you care about. The one thing that is missing is the \"Free Games\" categorization. Teen Agent Smokin' Guns Neverball Open Tyrianm Vega-Strikem Lure of the Temptress Dragon Historym - Celestial Impactm - TripleAm - UFO Alien Invasionm Evolution RTS Beretm Seven Kingdoms: Ancient Adversaries Renegade X Cube-2m Urban Terror Dwarf Fortress Wolfenstein: Enemy Territory Marble Arena 2 Warzone 2100 Battle for Wesnoth Bullet Train Neverputt Savage 2 Noxious Naev Monster 1 Zombie Grinder Process Starfare Hacknet Lariad Xonotic TANK@WAR Warlock's Gauntlet Incursion Revenge of the Cats: Ethernet The Kite Peekaboo Ristorante Amore Deity Open Arena World of Padman Bounce Savage Speed Dreams Insane Zombie Carnage Mecha World Inner Dream I Shall Remain Epic Inventor Alter Ego Miner Warfare Robot Pinball Escape CreepTD OpenTTD Flight of the Amazon Queen Drascula: The Vampire Strikes Back Wrestling MPire 1916 - Der Unbekannte Krieg Blendimals Warsow Zero Ballistics Vertigo M.A.R.S. - A Ridiculous Shooter Open Clonkcom Metal Venture The Mirror Lied Invaders: Corruption 10 min space strategy Dead Meets Lead Broken Dimensions Abuse Stunt Rally Alien Arena Flack Planeshift Tremulous Vulture for NetHack/a> OGS Mahjong Red Eclipse Beneath a Steel Sky Reversion Holy Spirit DDay Normandy Blogic Dimension Jump Puzzle Moppet Silver Quest Two Shields Wave Race Re: Alistair More.... Overall the available games are mostly Indie games where some will keep you busy until late hours and some that you will pass by and never look again. Usability Besides personal taste and the obvious click, install and play, the overall Desura Client and Desura Website is not that much easy to use . Every section brings new tabs for browsing and overwhelmed by content which some times make browsing confusing. Nevertheless after some time of using Desura you will get used to its design. Last but not least I came across a few crashes and freeze-ups of the Desura client that I had to \"Force close\" it and restart the application. Results and Discussion Overall it is great that we have a game distribution platform available on Linux. Also it is great to have a platform that gives the ability not only to publish your game even if you are an Indie developer or a small company, but also to vote, comment and interact with people (gamers, developers, community). Personally speaking, even though it has some rough edges, I am marking it as the best game distribution client available, right now on Linux platform. Who khows if they can keep up once Steam is ready for Linux.","tags":"Gaming","loc":"http://utappia.org/desura-steam-like-client-with-free-games.html","title":"Desura: Steam like gaming client alternative with tons of games"},{"text":"After several try-outs we have made some serious changes in our NVIDIA installation script. First of all, there is a new option that allows you to switch between X-Swat or Xorg-Edgers repo, meaning stable or beta drivers. Furthermore, the script has been modified in order to work with all Ubuntu version, including devs branch, such as Ubuntu 12.10 Quantal. Please replace the previous script with the new one :) Download our Installer Script Check a video using our Nvidia Installer Script","tags":"Utappia Projects","loc":"http://utappia.org/nvidia-installer-script-ver-1-1-released.html","title":"nVIDIA Installer script ver 1.1 released"},{"text":"Yesterday, we've informed you about the latest nVIDIA driver 304.43 was released. Today, we show you how to install them using our script that automatically configures your Ubuntu system. Click to the button bellow to learn how you can use our script. Nvidia Installer Script After the reboot, open Dash and type \" nvidia \". Using this tool you can configure all these nvidia settings :) btw you can use our script to unistall the drivers (in case you have problems) :","tags":"Maintenance","loc":"http://utappia.org/how-to-install-nvidia-304-43-with-one-click.html","title":"How to Install nVIDIA 304.43 with one click"},{"text":"Ten days after the Windows'version , the new NVIDIA 304.43 driver is now available for Linux. It comes with many features, but most significant is GeForce GTX 600 series support. Bug-fix wise, the driver includes a GLX crash fix on X.Org Server 1.13 and fixes the VDPAU hanging on YouTube . Next to that, the driver also fixes problems with GNOME Settings Daemon and the display configuration, RandR updates for NVIDIA Settings and a display palette bug. Bare in mind that NVIDIA 304.43 is not a beta driver, but a stable version; safe and recommended for everyone. Here is a list of Supported Cards GeForce 600 series: GTX 690, GTX 680, GTX 670, GTX 660 Ti, GT 645, GT 640, GT 630, GT 620, GT 610, 605 GeForce 600M series: GTX 680M, GTX 675M, GTX 670M, GTX 660M, GT 650M, GT 640M LE, GT 640M, GT 635M, GT 630M, GT 620M, G610M GeForce 500 series: GTX 590, GTX 580, GTX 570, GTX 560 Ti, GTX 560, GTX 550 Ti, GT 545, GT 530, GT 520, 510 GeForce 500M series: GTX 580M, GTX 570M, GTX 560M, GT 555M, GT 550M, GT 540M, GT 525M, GT 520MX, GT 520M GeForce 400 series: GTX 480, GTX 470, GTX 465, GTX 460 SE v2, GTX 460 SE, GTX 460, GTS 450, GT 440, GT 430, GT 420, 405 GeForce 400M series: GTX 485M, GTX 480M, GTX 470M, GTX 460M, GT 445M, GT 435M, GT 425M, GT 420M, GT 415M, 410M GeForce 300 series: GT 340, GT 330, GT 320, 315, 310 GeForce 300M series: GTS 360M, GTS 350M, GT 335M, GT 330M, GT 325M, GT 320M, 320M, 315M, 310M, 305M GeForce 200 series: GTX 295, GTX 285, GTX 280, GTX 275, GTX 260, GTS 250, GTS 240, GT 240, GT 230, GT 220, G210, 210, 205 GeForce 200M series: GTX 285M, GTX 280M, GTX 260M, GTS 260M, GTS 250M, GT 240M, GT 230M, GT 220M, G210M GeForce 100 series: GT 140, GT 130, GT 120, G 100 GeForce 100M series: GTS 160M, GTS 150M, GT 130M, GT 120M, G 110M, G 105M, G 103M, G 102M GeForce 9 series: 9800 GX2, 9800 GTX+, 9800 GTX/GTX+, 9800 GT, 9650 S, 9600 GT, 9600 GSO 512, 9600 GSO, 9600 GS, 9500 GT, 9500 GS, 9400 GT, 9400, 9300 SE, 9300 GS, 9300 GE, 9300 / nForce 730i, 9300, 9200, 9100 GeForce 9M series: 9800M GTX, 9800M GTS, 9800M GT, 9800M GS, 9700M GTS, 9700M GT, 9650M GT, 9650M GS, 9600M GT, 9600M GS, 9500M GS, 9500M G, 9400M G, 9400M, 9300M GS, 9300M G, 9200M GS, 9100M G GeForce 8 series: 8800 Ultra, 8800 GTX, 8800 GTS 512, 8800 GTS, 8800 GT, 8800 GS, 8600 GTS, 8600 GS, 8500 GT, 8400 SE, 8400 GS, 8400, 8300 GS, 8300, 8200, 8100 / nForce 720a GeForce 8M series: 8800M GTX, 8800M GTS, 8700M GT, 8600M GT, 8600M GS, 8400M GT, 8400M GS, 8400M G, 8200M G GeForce 7 series: 7950 GX2, 7950 GT, 7900 GTX, 7900 GT/GTO, 7900 GS, 7800 SLI, 7800 GTX, 7800 GT, 7800 GS, 7650 GS, 7600 LE, 7600 GT, 7600 GS, 7500 LE, 7350 LE, 7300 SE / 7200 GS, 7300 LE, 7300 GT, 7300 GS, 7150M /NVIDIA nForce 630M, 7150 / NVIDIA nForce 630i, 7100 GS, 7100 / NVIDIA nForce 630i, 7050 PV / NVIDIA nForce 630a, 7050 / NVIDIA nForce 630i, 7050 / nForce 620i, 7025 / NVIDIA nForce 630a, 7000M /NVIDIA nForce 610M GeForce Go 7 series: Go 7950 GTX, Go 7900 GS, Go 7800 GTX, Go 7800, Go 7700, Go 7600 GT, Go 7600, Go 7400, Go 7300, Go 7200 GeForce 6 series: 6800 XT, 6800 XE, 6800 Ultra, 6800 LE, 6800 GT, 6800 GS, 6800, 6700 XL, 6610 XL, 6600 VE, 6600 LE, 6600 GT, 6600, 6500, 6250, 6200 TurboCache, 6200SE TurboCache, 6200 LE, 6200 A-LE, 6200, 6150SE nForce 430, 6150 LE, 6150, 6100 nForce 420, 6100 nForce 405, 6100 nForce 400, 6100 NVS Series: NVS 510, NVS 310, NVS 300 Quadro series: K5000, 7000, 6000, 600, 5000, 410, 4000, 400, 2000D, 2000 Quadro FX series: FX Go1400, FX 5800, FX 580, FX 570, FX 5600, FX 560, FX 5500, FX 550, FX 540, FX 4800, FX 4700 X2, FX 4600, FX 4500 X2, FX 4500, FX 4000, FX 380 LP, FX 3800, FX 380, FX 370 Low Profile, FX 3700, FX 370, FX 3500, FX 350, FX 3450/4000 SDI, FX 3400/4400, FX 1800, FX 1700, FX 1500, FX 1400, CX Quadro Notebook series: K5000M, K4000M, K3000M, K2000M, K1000M, 5010M, 5000M, 4000M, 3000M, 2000M, 1000M Quadro FX Notebook series: FX 880M, FX 770M, FX 570M, FX 560M, FX 540M, FX 380M, FX 3800M, FX 370M, FX 3700M, FX 360M, FX 3600M, FX 350M, FX 2800M, FX 2700M, FX 2500M, FX 1800M, FX 1700M, FX 1600M, FX 1500M Quadro NVS series: NVS 450, NVS 440, NVS 420, NVS 295, NVS 290, NVS 285, NVS 210S / 6150LE Quadro NVS Notebook series: NVS 5400M, NVS 5200M, NVS 510M, NVS 4200M, NVS 320M, NVS 160M, NVS 150M, NVS 140M, NVS 135M, NVS 130M, NVS 120M, NVS 110M Quadro Plex series: Model IV, Model II, D Series, 7000 Quadro G-Sync series: G-Sync II Quadro SDI series: Quadro SDI ION series: ION LE, ION C-Class Processors: Tesla C870, Tesla C2075, Tesla C2070, Tesla C2050, Tesla C1060, T10 Processor M-Class Processors: Tesla M2090, Tesla M2075, Tesla M2070-Q, Tesla M2070, Tesla M2050, Tesla M1060 X-Class Processors: Tesla X2090 K-Series Processors: Tesla K10 Notice that, the driver has been released less than 12 hours ago, hence there is no Ubuntu available package yet. Simply put, you can't get the driver using any PPA method (X-Swat or Xorg-Edgers). Hopefully, there will be an update tomorrow. Until then you can manually download and install the driver using our instructions in our guide: How to install or upgrade Nvidia Video Drivers -- but we recommend you to wait a couple of hours until the 304.43 becomes available at Xorg-Edgers PPA Download 32 bit Download 64 bit Update : The drivers are available via PPA. Please use are script.","tags":"Maintenance","loc":"http://utappia.org/nvidia-304-43-driver-released.html","title":"NVIDIA 304.43 Driver Released"},{"text":"As you may have already read the Story behind uCareSystem one missing piece of puzzle was a terminal version of uCareSystem for all of power users and server administrators out there. uCareSystem Core You will find the new uCareSystem core executable in the same folder as with uCareSystem. This, terminal version is for: - Experienced users or Powerusers - Non Desktop Environments - Servers - Workstations -- for Adminstrators who want silently to make some system maintenance - Using with Cron Jobs by Admins for scheduled and automatic system maintenances Features uCareSystem Core has the same functionality with uCareSystem but without it has no GUI. Also, the first time you run the uCareSystem Core, it will copy its self to your system so that the next time you don't have to run the executable again. You will need just to run : sudo updatecore So what are you waiting for ! Head over the Download Page>>>","tags":"Utappia Projects","loc":"http://utappia.org/ucaresystem-and-ucaresystem-core-v1-0-released.html","title":"uCareSystem and uCareSystem Core v1.0 released"},{"text":"Abstract Unigine Heaven 3.0 is the latest version of what is probably the most popular graphics card benchmark series in Linux. In this article you will learn how to install and use it under Ubuntu Introduction Unigine Heaven is designed to measure your PCs gaming performance and makes extensive use of all the new features in OpenGL including tessellation, compute shaders and multi-threading. Trusted by gamers worldwide to give accurate and unbiased results, we believe that Unigine Heaven is the best way to consistently and reliably test your graphics card under game-like loads. Heavy GPU load, extreme hardware stability test. Support of DirectX 9, DirectX 10, DirectX 11 and OpenGL 4.0. Comprehensive use of hardware tessellation technology (3 presets). Advanced ambient occlusion. Dynamic global illumination. Volumetric cumulonimbus clouds of high physical fidelity. Simulation of day-night shift and changing light conditions. Dynamic sky with light scattering. Interactive experience with fly/walk-through modes. Support of NVIDIA SLI and ATI CrossFire technologies. Stereo 3D modes: Anaglyph Separate images 3D Vision 3D Surround iZ3D Support of multi-monitor configurations. Based on the latest, most advanced version version of powerful UNIGINE engine . Tessellation feature REQUIRES both video card with DirectX 11 support and MS Windows Vista/7 or Linux! Materials and Methods Hardware Requirements: To run Unigine you need at least: GPU: ATI Radeon HD 2xxx and higher NVIDIA GeForce 7xxx and higher Intel HD 3000 and higher Video memory: 512 Mb Disk space: 500 Mb Download Unigine Heaven 3.0 To obtain a copy of Unigine Heaven 3.0 Basic Edition, please launch your favorite browser (Firefox, Chrome, Opera, IE) and go to their official website . There are three different version including Windows, Linux and Mac OS X operating systems. To download the benchmark, please select one of the three available links: Guru3D, TPU and Torrent. If you ask me, I prefer the torrent link because it's the fastest way provided there, so let me help you and give you the link: Download Unigine Heaven 3.0 Transmission app will automatically launch itself as being Ubuntu's default torrent client. Please apply and accept the rules in order to download the benchmark. Transmission stores downloaded files into /home/username/Downloads/ -- same location for Firefox's downloads. Install Unigine 3.0 First of browse into your Downloads folder and locate the Unigine_Heaven-3.0.run file. Right click and select properties . Go to the second Tab ( Permissions ) and tick the \"Allow executing file as program\" checkbox. Close the file and then double click on it to run it. Click \" Run \". A new small window will pop up, extracting the Unigine Heaven 3.0 into your hard disk. Afterwards press Return (meaning Enter) to close the window. As you can see a new folder Unigine-Heaven-3.0 has been created. Inside, there are 3 folders and 1 file called heaven. Just change the permissions to heaven file (please make it executable (like you did before). Right click and select properties. Go to the second Tab (Permissions) and tick the ' Allow executing file as program \" checkbox. Close the file and double click on it.). Hopefully you will be able to launch the benchmark with no problems. Let us know if this method works for you.","tags":"Tuning - Optimization - Benchmarking","loc":"http://utappia.org/how-to-run-unigine-heaven-3-0-in-ubuntu-12-04-64bit.html","title":"How to run Unigine Heaven 3.0 in Ubuntu 64bit"},{"text":"With the thousands of commands available for the command line user, how can you remember them all? The answer is, you don't. The real power of the computer is its ability to do the work for you. To get it to do that, we use the power of the shell to automate things. Our nVIDIA Installer script is a collections of commands that are stored in a file. The shell can read this file and act on the commands as if they were typed at the keyboard. Please notice that our script works only with Ubuntu. No other Linux distributions are supported. Download our Installer Script After you download the tar.gz file just right click and unzip it. The executable is the nvidia_installer.sh How to use Nvidia Installer Just open a terminal (Ctrl + T) type sudo -i hit enter and provide your password to become admin \"drag n' drop\" the nvidia_installer.sh executable to the terminal hit enter to run the script The Nvidia installer script will do the following things: Remove opensource drivers (if any) Remove nvidia proprietary drivers (if any) Blacklist and remove modules (if any) Remove X-Swat PPA Update Upgrade Install nvidia latest proprietary from Xorg-edgers PPA Checks for sources integrity bug Reboots your PC Try it ;) If you want to hack the code, just clone the repository git clone git://github.com/ubuntuxtreme/Nvidia-installer.git If you have any issues please report them here: Report Issues for Nvidia Installer Script","tags":"Utappia Projects","loc":"http://utappia.org/nvidia-drivers-installer-script.html","title":"NVIDIA Drivers installer script"},{"text":"12.04 as an alternative operating system for those who currently use only Windows 7 or 8. [TOC] Abstract One of the most anticipated Linux distribution for a long time now is Ubuntu 12.04 LTS. There has been so much speculation and gossip about it. Canonical finally lifts the curtain on that 12.04 LTS version, and let me already say it out loud ... it's a gem ! Introduction In this article we will show you how to download and install Ubuntu 12.04 as an alternative operating system for those who currently use only Windows 7 or 8. This tutorial, takes you by the hand and guides you step-by-step into easily tasks. Before we startup the how-to let me blast a quick pros'n'cons out of the Ubuntu's commercial hype and emphasize some remarkable spots about Ubuntu and why should we care about. Pros It is the most popular Linux distribution Easy to use (Noob friendly) and install software Thousands of applications (derived from Debian) It just works -- out of the box Huge community (your question is probably already answered) Valve Steam will be supported soon Cons Not the fastest Linux distro Unity desktop is still young bugs bunny lives Materials and Methods Downloading and Burning Ubuntu 12.04 To obtain a copy of Ubuntu, please launch your favorite browser (Firefox, Chrome, Opera, IE) and go to official Ubuntu website . Once you get there, you'll find many resources about Ubuntu. Click \" Get Ubuntu now \" in order to proceed. Alright, here we have the 32-bit version as recommended by Canonical. Despite what's it says, please select 64bit and click Start Download . The disk image of 64bit is called amd64 -- which is just bad name scheme in every aspect -- meaning that it supports both AMD and Intel 64bit processors . Currently you're downloading Ubuntu 12.04 64-bit for Desktop PC. After that, you have to choose in what media you want Ubuntu to be loaded. There are to 2 choices here: CD/DVD-Rom boot via USB. A. Using a CD/DVD Once you have downloaded Ubuntu ISO image disc, the next step is to burn it into a CD media. To accomplish this task, we are going to use ImgBurn . Launch ImgBurn utility and click \" Write Image file to disc \" button. Browse into your computer's hard drive directory, probably at your \" Downloads \" folder, locate ubuntu-12.04-desktop-amd64.iso and click \" Open \". Afterwards, please insert an empty (blank) CD-Rom into your DVD-Writer device and get ready to obtain a copy of Ubuntu. Burn the Ubuntu ISO disk image into an actual CD-ROM disc. Please wait while the disc has being writing... Congrats! Operation Successfully completed! Just in case, mark the CD-Rom's surface using an appropriate marker-pen that dries instantly. B. Using a USB flash disk First off, we need a USB Drive Disc. Do you have one ? Plug it in your PC and backup its contents, because they will be deleted/replaced by Ubuntu disc image. Again: backup your flash disk's data. Just don't say you weren't warned. Go to Unetbootin's webpage and download the Windows version. Afterwards, browse into your hard disk and locate the unebootin executable. Double click to launch the application. Select Disc Image , ISO and click the dots \"...\" button in order to locate the Ubuntu's ISO image file. Browse into your computer's hard drive directory, probably at your \" Downloads \" folder, locate ubuntu-12.04-desktop-amd64.iso and click \"Open \". Select USB Drive and the locate the approriate letter that matches in your flash drive. Eventually, hit \"OK\" button to start the conversion of your flash drive into a fully operational and bootable media including Ubuntu 12.04 64bit. Please wait a couple of minutes while the USB flash disk is getting ready. Congrats! Operation successfully completed! Now you have Ubuntu 12.04 inside your flash disk. Reboot your computer and boot from USB. First Boot Device First off, remove all unnecessary USB items to ease the process. Insert the bootable USB flash/CD-Rom drive that you just created in your target computer and restart you PC. Most newer computers can boot from a USB flash/CD-Rom drive. If your computer does not automatically do so, you might need to edit the BIOS settings. Restart your computer, and watch for a message telling you which key to press to enter the BIOS setup. It will usually be one of F1, F2, DEL, ESC or F10. Press this key while your computer is booting to edit your BIOS settings. Instead of editing BIOS settings, you can chose a boot device from the boot menu. Press the function key to enter the boot menu when your computer is booting. Typically, the boot screen displays which key you need to press. It maybe one of F12, F10. Note: with some motherboards you have to select 'hard disk/USB-HDD0' to choose the USB flash disk. You need to edit the Boot Order. Depending on your computer, and how your USB key was formatted, you should see an entry for \"removable drive\" or \"USB media\" or \"CD-Rom\". Move this to the top of the list to make the computer attempt to boot from the USB/CD-Rom device before booting from the hard disk. In case you have moden PC using UEFI Bios make the necessary changes in order to boot from USB or CD-Rom first, instead of hard drive. Take a look from ASUS UEFI BIOS: Otherwise if you own a MSI motherboard take a look below: Ok now, hit F10 keystroke (Save and Exit) and restart your PC in order to boot from CD-ROM or USB drive as to install Ubuntu. Booting Ubuntu The installation of the Ubuntu 12.04 distribution is a child's play in the hands of advanced users who already have the experience of re-installing operating systems. If you are newbie, please do not be afraid of installation. Using the manual and our helpful instructions, there is no doubt that you will accomplish this task quite easily. As we stated before, the installation procedure is quite an easy job, but is also a bit time consuming though (about 25 minutes). Pay attention to the instructions and be gentle with your computer. Please be aware of the fact that if you already use Windows 7 or 8, Ubuntu can be installed alongside or completely remove Windows. That's my old monitor, installing Ubuntu 12.04. As you can see I've already managed to boot from CD-Rom and Ubuntu distribution auto loads first, replacing your hard drive and MBR. Have a peak and let's do it together step-by-step. Select your language from the left menu and click \" Install Ubuntu \" to proceed with the Installation. Make sure that your have a wired internet connection via Ethernet , in case of inability to find wifi networks. Allocate drive's space Please check \" Download updates while installing \" and \" Install third-party software \". Use the checkboxes to choose whether you'd like to Install Ubuntu alongside another operating system, delete your existing operating system and replace it with Ubuntu, or – if you're an advanced user – choose the 'Something else' option Select the first option in order to dual boot with Windows 7/8 and Ubuntu, otherwise select the second option and delete Windows partition at all using only Ubuntu. Third option is not recommended for beginners. Dual boot means multi-booting, likewise the act of installing multiple operating systems on a computer, and being able to choose which one to boot when starting the computer. The term dual-booting refers to the common configuration of specifically two operating systems. Multi-booting may require a custom boot loader that Ubuntu installation provives and configures it automatically based upon your system's needs. Now hit \" Install Now \" and wait a couple of moments until the installation is complete. Please notice that Ubuntu needs about 4.5 GB to install, so add a few extra GB to allow for your files. Ubuntu asks you for ... During the instalaltion, Ubuntu asks you some questions about yourself. No, it doesn't ask you to go out for a beer. Just, like any other operating system, Ubuntu needs to configure itself... local time, language, keyboard layout, username etc... Check if your location is correct and click 'Continue' to proceed. If you're unsure of your time zone, type the name of the town you're in or click on the map and we'll help you find it. Select your prefered keyboard layout. Click on the language option you need. If you're not sure, click the ‘Detect Keyboard Layout' button for help. Afterward click \" Continue \" to proceed. Enter your login and password details. If you like check \" Log in automatically \" and press \" Continue \" to proceed. Ok that's it. Now sit back and wait while the system installs… And yeah, that's the final message saying that installation is complete. Please remove the CD-Rom or USB from your PC and hit \"Enter\" to reboot. Update and Upgrade Once you boot into Ubuntu 12.04 you will see the Desktop; this is Unity. Before you play around with your new toys, we recommended update your pre-installed applications to the latest version. Also, bug fixes and security updates will automatically installed. Follow the instruction below and take a look to the video. Open your terminal by typing \" terminal \" into Dash search field or press Ctrl+Alt+T sudo apt-get update sudo apt-get upgrade Results and discussion Now reboot your PC and you're ready to boot in back to the all brand new Ubuntu 12.04. Hopfully this guid will help windows user to get along with the installation procedure of Ubuntu 12.04.","tags":"Deployment","loc":"http://utappia.org/how-to-install-ubuntu-12-04-using-windows-7-or-8.html","title":"How to install Ubuntu 12.04 using Windows 8"},{"text":"Abstract Actually the Catalyst driver was released yesterday (15/8/12) but the official link was broken, although many users find out the mispelling and download the driver without problem -- currently the link is fixed. Introduction There are two ways to install the AMD drivers: Easy Way with Xorg-Edgers Hard way (Manual) from binaries Also, there are two ways to uninstall them if you need so: PPA purge if you used Xorg-Edgers Purge Autoremove if you used the manual way Materias and Methods Here we will see how to install, upgrade and uninstall the AMD drivers The easy way: Xorg-Edgers PPA for Catalyst Do you want to install a PPA once, then stay back and relax for life? If so, then follow the easy path that most Ubuntu users do. Xorg-Edgers offers you bleeding-edge drivers directly from upstream git, but in case of AMD Catalyst they always provide the latest stable AMD release, since AMD is not giving beta drivers in public (in contrast to NVIDIA). If you go to Xorg-Edgers Lauchpad profile, you will see the 2:8.980-0ubuntu1\\~xedgers\\~precise1 is already available. Additionally, these guys are so crazy that they even provide the driver for the Ubuntu 12.10 Alpha 3 release via fglrx 2:8.980-0ubuntu1\\~xedgers\\~quantal1. PPA Installation Anyway, add the PPA into your source and update/upgrade your packages. If you had already add Xorg-Edgers into your Ubuntu, there is no need to do it again. Just update your system and reboot. sudo add-apt-repository ppa:xorg-edgers/ppa sudo apt-get update sudo apt-get dist-upgrade sudo apt-get install fglrx-installer PPA Uninstallation In case you want to upgrade Ubuntu up to a new version (eg from Ubuntu 12.04 upgrade into Ubuntu 12.10) you have to remove this PPA or strange things will happen and maybe render unstable the whole system. So before you upgrade to the newer Ubuntu distro, please act wise and remove it.. sudo apt-get install ppa-purge sudo ppa-purge ppa:xorg-edgers/ppa So far, we have covered the easy method and now you should be able to install and remove them properly. You can stop reading now and reboot your PC. Have fun! The hard (manual) way First you will need to download the driver Click to download the drivers for 64/32 bit (the package contains both the 32-bit and 64-bit driver.). Download 32/64bit If you install the AMD Catalyst for the first time then follow the following procedure Binary Installation Install prerequisite packages sudo apt-get install build-essential cdbs dh-make dkms sudo apt-get install execstack dh-modaliases fakeroot libqtgui4 If you are 64 bit, install these too sudo apt-get install ia32-libs ia32-libs-multiarch:i386 sudo apt-get install lib32gcc1 libc6-i386 cd /usr ; sudo ln -svT lib /usr/lib64 Now go into your Downloads folder (I suppose you have already download the driver), make the package executable, create and install deb packages cd Downloads chmod +x amd-driver-installer-8.982-x86.x86_64.run sudo sh ./amd-driver-installer-8.982-x86.x86_64.run --buildpkg Ubuntu/precise sudo dpkg -i fglrx*.deb Now enable new settings sudo aticonfig --initial -f Binary Upgrade If you are to Upgrade from AMD Catalyst 12.6 to 12.8 then follow the following procedure: Go into your Downloads folder (I suppose you have already download the driver), make the package executable, create deb packages, force overwrite the older packages with the new ones cd Downloads chmod +x amd-driver-installer-8.982-x86.x86_64.run sudo sh ./amd-driver-installer-8.982-x86.x86_64.run --buildpkg Ubuntu/precise sudo dpkg --force-overwrite -i *.deb Now reboot you PC. Binary Uninstall If want to unistall them sudo apt-get --purge autoremove fglrx fglrx_* fglrx-amdcccle* fglrx-dev*","tags":"Maintenance","loc":"http://utappia.org/amd-catalyst-12-8-released-install-guide.html","title":"AMD Catalyst 12.8 Released - Install Guide"},{"text":"Abstract In this article we aim to give answers and solutions in order to play games using nVIDIA GPU. There are two primary points you need to pay attention to: GPU model and Driver's version Introduction First lets get clear some things upfront about the Open Source VS Proprietary drivers. Ubuntu has an answer on that and comes with open source video driver by default, called Nouveau . There is no need to put any effort to install Nouveau because this driver is already, completely installed 100% from the first boot. However this one comes with a price - lacking of 3D acceleration meaning most games will not work and you will have performance issues. As a side effect, NVIDIA made available another driver -- not opensource but proprietary -- called NVIDIA Unified UNIX Graphics Driver . Having this one installed, you make use of your GPUs hardware potential to the fullest and thus expect some serious performance boost. Nonetheless, we would like to notice that we do not aim to go into open vs close source anticipation, but to provide you with something you can play games and benchmark your hardware, without problems. Truth to be told, the open source driver is struggling to perform or play modern games, thus we recommend using NVIDIA Unified UNIX Graphics driver; but if you are not much of a gamer guy, then nouveau will do the job as well. Materials and Methods All in all, if you are serious about high-performance and gaming, you already know that NVIDIA proprietary driver is what you need. In this section we will cover the following topics: Identify your GPU model Install/Uninstall Nvdia driver Using our own Nvidia Installer Script Using PPA Using the officialy provided (compiling) method Identify your GPU model In Linux, what a video driver does is allowing OpenGL API to interact with the graphics card. Pay attention, that nVIDIA provides many different versions for Linux, meaning that your first concern is to identify which version/driver is suitable for your GPU. To answer that question you need to know your GPU's model (eg GeForce GTX680, GeForce Ti4200, TNT Riva etc) and then look for its name into their hardware support lists. To identify your hardware, instead of using a terminal-based command you can go to \" System Settings \" and click on the \" Details \" icon. Now you know what hardware you are running at your PC and you can search for the appropriate driver. Installation Installation can be acomplished by using any of the following methods: Using our own Nvidia Installer Script Using PPA Using the officialy provided (compiling) method Nvidia Installer Script We recommend you to download and run our script which will automatically installs Xorg-Edge drivers. The script automatically removes opensource drivers (if any), nvidia proprietary old drivers (if any), blacklists and removes the appropriate modules and last but certainly not least, fixes sources and installs the latest nVIDIA drivers drivers and restarts your PC. Please try our script. Download our Installer Script Please add execute permission to the script then run the script: chmod +x installer_nvidia.sh sh ~/Downloads/installer_nvidia.sh Using PPA Do you want to install a PPA once, then stay back and relax for life? If so, then follow the easy path that most Ubuntu users do. Two choices here, but pick one: xorg crack pushers (aka Xorg-edgers) or Ubuntu-X . The difference between these two PPA is that Xorg-Edgers offers you bleeding-edge drivers directly from upstream git, while X-Swat provides you a safer -- recommended -- upstream releases. Latest ( maybe unstable ) drivers sudo add-apt-repository ppa:xorg-edgers/ppa sudo apt-get update sudo apt-get install nvidia-current Latest but stable drivers sudo add-apt-repository ppa:ubuntu-x-swat/x-updates sudo apt-get update sudo apt-get install nvidia-current Warning : In case you want to upgrade Ubuntu up to a new version (eg from Ubuntu 12.04 upgrade into Ubuntu 12.10) you have to remove this PPA or strange things will happen and maybe render unstable the whole system. So before you upgrade to the newer Ubuntu distro, please act wise and remove it.. Unistall the PPA sudo apt-get install ppa-purge sudo ppa-purge ppa:ubuntu-x-swat/x-updates Or if you used xorg-edgers: sudo ppa-purge ppa:xorg-edgers/ppa After upgrading to the newer version of Ubuntu, you should re-able the PPA in order to get updates based on the new branch related to your new distro. Unistall the NVIDIA Unified and Restore Nouveau If for some reason you want to remove the nVIDIA unified Driver and go back into Nouveau opensource stuff, then follow the instructions bellow. sudo apt-get purge nvidia sudo apt-get install nouveau So far, we have covered the easy method and now you should be able to install and remove them properly. You can stop reading now and reboot your PC. Have fun ;) Using the officialy provided (compiling) method WARNING : Pay attention that every time you update you kernel, you should repeat the whole procedure. Otherwise you will end up with a broken X server. In contrast to the PPA method, compiling the module by yourself it's not what Ubuntu tastes, especially when there are two Launchpad teams who provide you the dinner well served. So doing all that by hand is pointless. Still reading ah? If you consider yourself as person who posses significant knowledge on Linux and basic bash terminal commands, then feel free to compile the NVIDIA driver module on your own . There's nothing wrong doing things manually; grasp deep knowledge of things who, which, where and what is happening into your system. So, after identifying yours GPU model, go to NVIDIA webpage and browse into the Supported Products tab, looking for your model. If you purchased your GPU during the past 5 years then it's probably supported by the Latest Long Lived Branch version and Latest Short Lived Branch version. The difference between these two is that the Long Live Branch is something like Ubuntu LTS -- meaning only security updates and bugfixes. If you can't find your model' name nowhere on that list, then you should look under the Legacy stuff. Supposing you own a long fashioned GPU, nVIDIA provides you their Legacy Driver -- support for very old models, such as TNT2, GeForce3/4 Ti/MX/FX series etc. Eventually, we recommend you to install the Short Lived Branch version -- no fear. Here is a step-by-step guide to do it. Download the driver wget -qO- ftp://download.nvidia.com/XFree86/Linux-x86/XXXXXXX.run Kill the X server Press Ctrl+Alt+F1 or F2 or F3 or F-whatever otherwise type the command: sudo chvt 1 && sudo service lightdm stop where chvt 1 is tty1 = equal to Ctrl+Alt+F1 where chvt 2 is tty2 = equal to Ctrl+Alt+F2 where chvt 3 is tty3 and so on... Disable nouveau sudo modprobe -b vga16fb sudo modprobe -b nouveau sudo modprobe -b rivafb sudo modprobe -b nvidiafb Remove nouveau packages sudo apt-get --purge remove xserver-xorg-video-nouveau sudo update-initramfs -u Reboot sudo shutdown -r 0 Remove all nvidia* packages in the system and remove all the nvidia kernel objects currently installed sudo dpkg -l | grep nvidia | awk ' { print $ 2 }' | xargs sudo aptitude -y purge export kernel_version='uname -r' sudo rm -f 'find /lib/modules/ $ kernel_version -iname nvidia.ko' Install the new driver sudo sh NVIDIA-Linux-x86-*.run Enable the Desktop sudo service lightdm start Results and Discussion Alright let's round things up. The NVIDIA Unified drivers are way better than Nouveau since they provide 3D acceleration. The greatness of NVIDIA is their combination of decent performance and low noise levels and as such this dynamic shifted through their GPUs. It is common knowledge that their Linux drivers are way immature comparing to Windows, hence lot's of features are not implemented. On the other side of the scope, we also have to acknowledge that this driver is pitted against to a currently zero-market, since there is no actual profit from Linux gaming. But soon, things will change and then we will be happy to edit this article. Until then, may the source be with you, always!","tags":"Maintenance","loc":"http://utappia.org/how-to-install-or-upgrade-nvidia-video-drivers.html","title":"How to install or upgrade Nvidia Video Drivers"},{"text":"After the recent change on release schedule, you can download the latest version of Optimus Kernel which is based on the following recipes : Ubuntu Linux 3.2.0.29 (if you have proprietary graphic card drivers installed in your system* you may need to reinstall them after the installation of the new kernel release) BFQ patches In-house optimizations Go Grab your Packages from the Download Page>>>>> Optimus Kernel Change log : Rebuild and synced with 3.2.0.29 Ubuntu Linux kernel (for what is included please read the kernel log on website) New course on building the kernel. Please read the my previus blogpost for details. Only BFQ patches applied as for some reason BFS patches produce build error Changed Default CPUFreq to Performance Removed kernel performance counters (old config option) Removed VIA Cyrix III Longhaul (32bit Power managment) Enabled Support for PCI Hotplug (HOTPLUG_PCI) Enabled Support for PCI Express Hotplug driver (HOTPLUG_PCI_PCIE) Enabled Support for ACPI PCI Hotplug driver (HOTPLUG_PCI_ACPI) Enabled Support for ACPI PCI Hotplug driver IBM extensions (HOTPLUG_PCI_ACPI_IBM) Enabled Support for CompactPCI Hotplug driver (HOTPLUG_PCI_CPCI) Enabled Support for Ziatech ZT5550 CompactPCI Hotplug driver (HOTPLUG_PCI_CPCI_ZT5550) Enabled Support for Generic port I/O CompactPCI Hotplug driver (HOTPLUG_PCI_CPCI_GENERIC) Enabled Support for SHPC PCI Hotplug driver (HOTPLUG_PCI_SHPC) Enabled Support for ASUS WMI Driver (ASUS_WMI) Enabled Support for Eee PC Hotkey Driver (EEEPC_LAPTOP) Enabled Support for Asus Notebook WMI Driver (ASUS_NB_WMI) Enabled Support for Eee PC WMI Driver (EEEPC_WMI) Kernel Change log : ShortLog available at","tags":"Utappia Projects","loc":"http://utappia.org/optimus-kernel-3-2-0-29-released.html","title":"Optimus Kernel 3.2.0.29 released"},{"text":"After 9 releases of Optimus Kernel while the release cycle was going smooth and I was releasing following the mainline kernel version…. in June after the release of Optimus Kernel 3.3.7 things started to slow down on the schedule because of some factors. This led me to reconsider the release cycle of Optimus. If you want to read the full story behind my decision please read the detailed blogpost over my blog : Optimus Kernel: Building the best Ubuntu Desktop experience Here its the TL;DR version: New versions will be based ONLY on the latest available stable of Ubuntu 100% Compatibility is unquestionable Linux Kernel from 3.3.8.... 3.4+ caused some build errors that where time consuming το fix Came across multiple Bugs in BFS and BFQ schedulers Patches to make an Ubuntu compatible Optimus Kernel that is based on the latest Kernel, are not always at sync with mainline (at least not stable) New Optimizations will focus more on Performance Stability is priority so users should feel the same as using the default kernel that ships with Ubuntu but feel the boost in performance Please stay tuned, by subscribing and the following days I will release the 64bit and 32bit versions of Optimus Kernel based on this new release schedule.","tags":"Utappia Projects","loc":"http://utappia.org/new-course-new-oportunities.html","title":"New course, new oportunities..."},{"text":"You can download the latest version of Optimus Kernel which is based on the following recipes : Linux 3.3.7 (if you have proprietary graphic card drivers installed in your system you may need to reinstall them after the installation of the new kernel release) Ubuntu/Debian patchsets BFS and BFQ patches In-house optimizations Go Grab your Packages from the Download Page>>>>> Optimus Change log : - Rebuild and synced with 3.3.7 vanilla Linux kernel (for what is included please read the kernel log on website)< - Enabled Control Group support. - Used full CK patchset prepared by Con Colivas instead of just applying BFS patch. - Patched with AppArmor 2.4 compatibility patch due to stupid AppArmor messages and delay during boot. Kernel Change log : crypto: mv_cesa requires on CRYPTO_HASH to build virtio: console: tell host of open ports after resume from s3/s4 target: Fix SPC-2 RELEASE bug for multi-session iSCSI client setups cdc_ether: Ignore bogus union descriptor for RNDIS devices ASoC: cs42l73: Sync digital mixer kcontrols to allow for 0dB kmemleak: Fix the kmemleak tracking of the percpu areas with !SMP hugetlb: prevent BUG_ON in hugetlb_fault() -> hugetlb_cow() arch/tile: apply commit 74fca9da0 to the compat signal handling as well cifs: fix revalidation test in cifs_llseek() cdc_ether: add Novatel USB551L device IDs for FLAG_WWAN OMAPDSS: VENC: fix NULL pointer dereference in DSS2 VENC sysfs debug attr on OMAP4 ALSA: HDA: Lessen CPU usage when waiting for chip to respond sparc64: Do not clobber %g2 in xcall_fetch_glob_regs(). ext4: avoid deadlock on sync-mounted FS w/o journal compat: Fix RT signal mask corruption via sigprocmask dl2k: Clean up rio_ioctl MD: Add del_timer_sync to mddev_suspend (fix nasty panic) media: marvell-cam: fix an ARM build error jffs2: Fix lock acquisition order bug in gc path media: rc: Postpone ISR registration ASoC: wm8994: Fix AIF2ADC power down ALSA: echoaudio: Remove incorrect part of assertion media: dvb_frontend: fix a regression with DVB-S zig-zag namespaces, pid_ns: fix leakage on fork() failure dm mpath: check if scsi_dh module already loaded before trying to load usbnet: fix skb traversing races during unlink(v2) target: Drop incorrect se_lun_acl release for dynamic -> explict ACL conversion target: Fix bug in handling of FILEIO + block_device resize ops mm: nobootmem: fix sign extend problem in __free_pages_memory() ARM: prevent VM_GROWSDOWN mmaps extending below FIRST_USER_ADDRESS Avoid beyond bounds copy while caching ACL Avoid reading past buffer when calling GETACL init: don't try mounting device as nfs root unless type fully matches memcg: free spare array to avoid memory leak media: s5p-fimc: Fix locking in subdev set_crop op ALSA: hda/realtek - Add missing CD-input pin for MSI-7350 mobo ALSA: hda/idt - Fix power-map for speaker-pins with some HP laptops percpu: pcpu_embed_first_chunk() should free unused parts after all allocs are complete i2c-eg20t: change timeout value 50msec to 1000msec spi-topcliff-pch: Modify pci-bus number dynamically to get DMA device info spi-topcliff-pch: Fix issue for transmitting over 4KByte spi-topcliff-pch: supports a spi mode setup and bit order setup by IO control spi-topcliff-pch: add recovery processing in case wait-event timeout e1000: Prevent reset task killing itself. ARM: 7417/1: vfp: ensure preemption is disabled when enabling VFP access mtd: fix oops in dataflash driver tcp: do_tcp_sendpages() must try to push data out on oom conditions","tags":"Utappia Projects","loc":"http://utappia.org/optimus-kernel-3-3-7-released.html","title":"Optimus Kernel 3.3.7 released"},{"text":"This is a small video review of iQunix, an operating system optimized for experienced Ubuntu/Debian users and professionals who prefer to decide what software should their system have pre installed. Recently released, iQunix 12.04 is available for download . If you want to know what has changed since the last release (11.04) please read the release notes here For fullscreen please click the apropreate (lower-right corner) button and choose your desired video quality. iQunix 12.04 video review Music: Zero-project - 02 - Touch of serenity (on Jamendo)","tags":"Utappia Projects","loc":"http://utappia.org/iqunix-12-04-video-review.html","title":"iQunix 12.04 video review"},{"text":"A brand new release, iQunix 12.04 is available for download. Alongside with this new release there are some new plans for this special OS. iQunix OS has been around for about a year. With this release there are some major changes and plans for the future. So in general iQunix: will be based only on Long Time Support releases of Ubuntu ( what is L.T.S. ?) will have only 64 bit releases of the operating system ( what is 64bit OS architecture ) has migrated from Gnome 2.x to Unity 2D ( how to work on Unity ?) Whats new: iQunix 12.04 is now based on Unity, the latest user interface that Ubuntu introduced earlier in 2011. Appart from the overall user interface change there is: JetBrowser : It is the new addition in Utappia's portfolio, a really fast, simple and secure browser Software Center: Thousands of applications one click away. Gedit: Simple to use text editor Remastersys: You have installed some applications and you want to share the resulted OS with your friends or you want a complete backup ? This the app for the job. Apart from the above there are no other unnecessary software, so you can install what ever you want. What else : The iQunix 12.04 will be supported with software and system updates for 5 years . This means that you install once and have it for 5 years. Also the ISO files that is available for download, will be updated with the latest updates, so that if some time later on the lifecycle of iQunix 12.04, you need to re-install, you will have an up-to-date ISO. So you want to try ? Go grab the ISO>>>>>>> Installation of iQunix is the same as Ubuntu. You can reade the instructions here I wish to thank all of you who are donating for the development of iQunix. I wish you the best.","tags":"Utappia Projects","loc":"http://utappia.org/iqunix-12-04-released-new-course-and-new-plans.html","title":"iQunix 12.04 released: New course and new plans"},{"text":"You can download the latest version of Optimus Kernel which is based on the following recipes : Linux 3.3.4 (if you have proprietary graphic card drivers installed in your system *you may need to reinstall them after the installation of the new kernel release) Ubuntu/Debian patchsets BFS and BFQ patches In-house optimizations Go Grab your Packages from the Download Page>>>>> Optimus Change log : Rebuild and synced with 3.3.4 vanilla Linux kernel (for what is included please read the kernel log on website) Removed Optimize for size Compiling using CCASHE Compilling with -O2 instead of -Os gcc options Removed Partition types exept PC BIOS, Winodws Logiacal M. , EFI Removed Control Group support Removed Support for PCI hotplug Removed Token ring driver support Removed ATM drivers Removed Infiniband support","tags":"Utappia Projects","loc":"http://utappia.org/optimus-kernel-3-3-4-released.html","title":"Optimus Kernel 3.3.4 released"},{"text":"You can download the latest version of Optimus Kernel which is based on the following recipes : Linux 3.2.16 Ubuntu/Debian patchsets BFS and BFQ patches In-house optimizations Go Grab your Packages from the Download Page >>>>> Optimus Change log : Rebuild and synced with 3.2.14 vanilla Linux kernel (for what is included please read the kernel log on website) Removed Industrial I/O drivers which are not needed for the avarege Joe out there Removed Virtualisation drivers (VIRT_DRIVERS) Removed support for JFS, XFS, GFS2, OCFS2, NILFS2 Removed KGDB (KGDB) Removed TOMOYO Linux Support (SECURITY_TOMOYO) Removed EVM support (EVM) Kernel Change log : drm/radeon: fix load detect on rn50 with hardcoded... drm/radeon: disable MSI on RV515 drm/radeon/kms: fix the regression of DVI connector... futex: Do not leak robust list to unprivileged process Bluetooth: Add support for BCM20702A0 0a5c:21e3 Bluetooth: Add Atheros maryann PIDVID support Bluetooth: Adding USB device 13d3:3375 as an Atheros... spi-topcliff-pch: Support new device LAPIS Semiconducto... spi-topcliff-pch: fix -Wuninitialized warning pch_dma: Support new device LAPIS Semiconductor ML7831 IOH pch_gbe: memory corruption calling pch_gbe_validate_opt... pch_gbe: Do not abort probe on bad MAC security: fix compile error in commoncap.c ACPICA: Fix to allow region arguments to reference... usb: gadget: pch_udc: Reduce redundant interrupt usb: gadget: pch_udc: Fix usb/gadget/pch_udc: Fix ether... usb: gadget: pch_udc: Fix USB suspend issue usb: gadget: pch_udc: Fix wrong return value usb: gadget: pch_udc: Fix disconnect issue gpio: Add missing spin_lock_init in gpio-pch driver pch_gpio: Support new device LAPIS Semiconductor ML7831 IOH Bluetooth: hci_core: fix NULL-pointer dereference at... xhci: Fix register save/restore order. ath9k: fix max noise floor threshold fcaps: clear the same personality flags as suid when... serial: PL011: move interrupt clearing serial: PL011: clear pending interrupts fix tlb flushing for page table pages xHCI: Correct the #define XHCI_LEGACY_DISABLE_SMI xHCI: add XHCI_RESET_ON_RESUME quirk for VIA xHCI host USB: fix bug of device descriptor got from superspeed... xhci: Restore event ring dequeue pointer on resume. xhci: Don't write zeroed pointers to xHC registers. xhci: don't re-enable IE constantly USB: don't ignore suspend errors for root hubs USB: don't clear urb->dev in scatter-gather library USB: sierra: add support for Sierra Wireless MC7710 USB: ftdi_sio: fix race condition in TIOCMIWAIT, and... USB: ftdi_sio: fix status line change handling for... USB: option: re-add NOVATELWIRELESS_PRODUCT_HSPA_HIGHSP... USB: pl2303: fix DTR/RTS being raised on baud rate... USB: serial: fix race between probe and open pch_uart: Fix MSI setting issue nohz: Fix stale jiffies update in tick_nohz_restart() video:uvesafb: Fix oops that uvesafb try to execute... perf hists: Catch and handle out-of-date hist entry... cciss: Fix scsi tape io with more than 255 scatter... cciss: Initialize scsi host max_sectors for tape drive... sparc64: Fix bootup crash on sun4v. sparc64: Eliminate obsolete __handle_softirq() function tty: serial: altera_uart: Check for NULL platform_data... staging: iio: hmc5843: Fix crash in probe function. hugetlb: fix race condition in hugetlb_fault() drivers/rtc/rtc-pl031.c: enable clock on all ST variants ia64: fix futex_atomic_cmpxchg_inatomic() ext4: address scalability issue by removing extent... Bluetooth: hci_ldisc: fix NULL-pointer dereference... Bluetooth: uart-ldisc: Fix memory leak md/bitmap: prevent bitmap_daemon_work running while... ARM: 7384/1: ThumbEE: Disable userspace TEEHBR access... ARM: 7379/1: DT: fix atags_to_fdt() second call site rtlwifi: Add missing DMA buffer unmapping for PCI drivers drm/i915: make rc6 module parameter read-only drm/i915: properly compute dp dithering for user-create... drm/radeon: only add the mm i2c bus if the hw_i2c modul... drm/i915/ringbuffer: Exclude last 2 cachlines of ring... drm/radeon/kms: fix DVO setup on some r4xx chips drm/i915: mask transcoder select bits before setting...","tags":"Utappia Projects","loc":"http://utappia.org/optimus-kernel-3-2-16-released.html","title":"Optimus Kernel 3.2.16 released"},{"text":"This post is related to a problem that some users of Ubuntu came across to a bug that prevents their system to establish connection when using the latest version of Optimus Kernel and describes a permanent solution to it. Many users contacted me reporting a weird \"Network Connection\" problem when they installed the latest Optimus Kernel. Wile I was testing to see if this is just a \"Optimus Kernel\" issue, I saw that in the latest version of Ubuntu 12.04 Beta this is not an issue. I am not 100% certain what had caused this but I have found the one to blame: AppArmor It seems that the version of AppArmor that is present in Ubuntu 11.10, doesn't let DHCP to establish a network connection. So in the meantime I have a permanet workaround. This will put DHCP daemon in a complain mode so that it will not be enforced by AppArmor to not make connection and so DHCP will just be let alone. Here is what you can do only once: First install apparmor utilities from Software Center or from terminal: sudo apt-get install apparmor-utils Then in your terminal login as a root! (this is necessary as plain \"sudo\" will not work) sudo -i Then you need to add DHCP in complain mode: aa-complain /sbin/dhclient Now that you have added DHCP in complaint mode, it should be listed in complaint mode apps: apparmor_status Now you should be able to establish network connection. I hope that I have resolved the issue for all optimus kernel users and I would be glad to hear back from you if you have any other problems.","tags":"Utappia Projects","loc":"http://utappia.org/no-network-connection-a-weird-problem.html","title":"No network connection, a weird problem..."},{"text":"iQunix 10.10v1 was released on 2011-03-15 end according to the release schedule of Ubuntu, it has come to an end-of-support. This note is just to confirm that the support period for iQunix 10.10v1 formally has ended on April 10, 2012 and Ubuntu Security Notices no longer includes information or updated packages for iQunix 10.10v1. iQunix 10.10 was based on Ubuntu 10.10 released in October 2010 which was based on the 2.6.35 Linux kernel, and included version 2.32.0 of the GNOME desktop environment. iQunix 10.10v1 users are strongly advised to upgrade to iQunix 11.04 to continue receiving updates or later to iQunix 12.04 which will be available in May, 2012.","tags":"Utappia Projects","loc":"http://utappia.org/iqunix-10-10v1-end-of-life-reached-on-april-10.html","title":"iQunix 10.10v1 end-of-life reached on April 10"},{"text":"You can download the latest version of Optimus Kernel which is based on the following recipes : Linux 3.2.14 Ubuntu/Debian patchsets BFS and BFQ patches In-house optimizations Go Grab your Packages from the Download Page ---- Optimus Change log : - Rebuild and synced with 3.2.14 vanilla Linux kernel (for what is included please read the kernel log on website) - All configuration options are now reverted to default and starting from scratch - Optimize for size - Remove schedulers (deadline, CFQ,) - BFQ hierarchical scheduling - Remove Paravirtualized guest support - Removed Virtualisation (CONFIG_VIRTUALIZATION) - Preemptible Kernel - Timer frequency 1000Hz - Remove support for Centaur, Cyrix, Transmeta, Umc processors - Removed Support for extended (non-PC) x86 platforms - Default CPUFreq --- ONDEMAND - Removed NFC subsystem support (CONFIG_NFC) - Set Maximum number CPUs to 25 (64bit) and 8 (32bit) - Removed Plan 9 Resource Sharing Support (CONFIG_NET_9P) - Removed CAIF support (CONFIG_CAIF) - Removed Tablet drivers - Removed Touchscreen drivers - Removed Microsoft Hyper-V client drivers (CONFIG_HYPERV) - Reverted to -Os gcc optimizasions Kernel Change log : ASPM: Fix pcie devices with non-pcie children serial: sh-sci: fix a race of DMA submit_tx on transfer nfsd: don't allow zero length strings in cache_parse() rtc: Provide flag for rtc devices that don't support UIE compat: use sys_sendfile64() implementation for sendfil... x86, tls: Off by one limit check x86, tsc: Skip refined tsc calibration on systems with... lockd: fix arg parsing for grace_period and timeout. xfrm: Access the replay notify functions via the regist... sky2: override for PCI legacy power management Remove printk from rds_sendmsg net: fix napi_reuse_skb() skb reserve net: fix a potential rcu_read_lock() imbalance in rt6_f... net: bpf_jit: fix BPF_S_LDX_B_MSH compilation ipv6: fix incorrent ipv6 ipsec packet fragment Fix pppol2tp getsockname() drm/i915: suspend fbdev device around suspend/hibernate Bluetooth: btusb: fix bInterval for high/super speed... module: Remove module size limit NFSv4.1: Fix layoutcommit error handling NFSv4: Fix two infinite loops in the mount code slub: Do not hold slub_lock when calling sysfs_slab_add() xfs: Fix oops on IO error during xlog_recover_process_i... backlight: fix typo in tosa_lcd.c dm thin: fix stacked bi_next usage dm persistent data: fix btree rebalancing after remove dm exception store: fix init error path dm crypt: add missing error handling dm crypt: fix mempool deadlock gpio/davinci: fix enabling unbanked GPIO IRQs gpio/davinci: fix oops on unbanked gpio irq request gpio/omap: fix _set_gpio_irqenable implementation udf: Fix deadlock in udf_release_file() ARM: tegra: select required CPU and L2 errata options vfs: fix d_ancestor() case in d_materialize_unique ext4: check for zero length extent ext4: fix race between sync and completed io work ext4: fix race between unwritten extent conversion... ext4: ignore EXT4_INODE_JOURNAL_DATA flag with delalloc jbd2: clear BH_Delay & BH_Unwritten in journal_unmap_buffer PM / Hibernate: Enable usermodehelpers in hibernate... NFSv4: Rate limit the state manager warning messages mxl111sf: fix error on stream stop in mxl111sf_ep6_stre... pvrusb2: fix 7MHz & 8MHz DVB-T tuner support for HVR190... fix signedness error in i2c_read_demod_bytes() hwmon: (fam15h_power) Correct sign extension of running... protect poll() in entries that may go away iommu/amd: Fix section warning for prealloc_protection_... use d_set_d_op() API to set dentry ops in... x86-32: Fix endless loop when processing signals for... e1000e: Avoid wrong check on TX hang usbnet: don't clear urb--dev in tx_complete usbnet: increase URB reference count before usb_unlink_urb SUNRPC: We must not use list_for_each_entry_safe()... UBI: fix eraseblock picking criteria UBI: fix error handling in ubi_scan() CIFS: Fix a spurious error in cifs_push_posix_locks cifs: fix issue mounting of DFS ROOT when redirecting... CIFS: Respect negotiated MaxMpxCount xfs: fix inode lookup race NFSv4: Return the delegation if the server returns... NFS: Properly handle the case where the delegation... KVM: x86: fix missing checks in syscall emulation KVM: x86: extend \"struct x86_emulate_ops\" with \"get_cpuid\" firewire: ohci: fix too-early completion of IR multicha... pata_legacy: correctly mask recovery field for HT6560B HID: add more hotkeys in Asus AIO keyboards HID: add extra hotkeys in Asus AIO keyboards Bluetooth: Add AR30XX device ID on Asus laptops target: Fix 16-bit target ports for SET TARGET PORT... target: prevent NULL pointer dereference in target_repo... target: fix use after free in target_report_luns target: Don't set WBUS16 or SYNC bits in INQUIRY response drm/radeon/kms: add connector quirk for Fujitsu D3003... drm/radeon/kms: fix analog load detection on DVI-I... drm/radeon: Restrict offset for legacy hardware cursor. drm/i915: Only clear the GPU domains upon a successful... md: fix clearing of the 'changed' flags for the bad... md/raid1,raid10: avoid deadlock during resync/recovery. md: don't set md arrays to readonly on shutdown. md/bitmap: ensure to load bitmap when creating via... tcm_fc: Fix fc_exch memory leak in ft_send_resp_status udlfb: remove sysfs framebuffer device with USB .discon... usb gadget: fix a section mismatch when compiling g_ffs... ALSA: hda - fix printing of high HDMI sample rates iscsi-target: Fix dynamic -- explict NodeACL pointer... iscsi-target: Fix iscsit_alloc_buffs() failure cases tcm_loop: Set residual field for SCSI commands ASoC: pxa-ssp: atomically set stream active masks ASoC: fsl: p1022ds: tell the WM8776 codec driver that... hugetlbfs: avoid taking i_mutex from hugetlbfs_read() bootmem/sparsemem: remove limit constraint in alloc_boo... PM / Domains: Fix handling of wakeup devices during... TPM: Zero buffer whole after copying to userspace mm: thp: fix pmd_bad() triggering in code paths holding... x86/ioapic: Add register level checks to detect bogus... ima: fix Kconfig dependencies IB/iser: Post initial receive buffers before sending... rtnetlink: Fix VF IFLA policy p54spi: Release GPIO lines and IRQ on error in p54spi_probe Disable the alarm in the hardware (v2) genirq: Fix incorrect check for forced IRQ thread handler genirq: Fix long-term regression in genirq irq_set_irq_... uevent: send events in correct order according to seqnu... ntp: Fix integer overflow when setting time math: Introduce div64_long iwlwifi: always monitor for stuck queues rtlwifi: rtl8192ce: Fix loss of receive performance rtlwifi: rtl8192c: Prevent sleeping from invalid contex... rtlwifi: Handle previous allocation failures when freei... rtlwifi: rtl8192c_common: rtl8192de: Check for allocati... rt2x00: Add support for D-Link DWA-127 to rt2800usb. USB: serial: mos7840: Fixed MCS7820 device attach problem usb: cp210x: Update to support CP2105 and multiple... usb-serial: Add support for the Sealevel SeaLINK+8... USB: qcserial: don't grab QMI port on Gobi 1000 devices USB: qcserial: add several new serial devices USB: ums_realtek: do not use stack memory for DMA in... usb: Fix build error due to dma_mask is not at pdev_arc... usb: fsl_udc_core: Fix scheduling while atomic dump... cdc-wdm: Don't clear WDM_READ unless entire read buffer... cdc-wdm: Fix more races on the read path USB: serial: fix console error reporting TTY: Wrong unicode value copied in con_set_unimap() tty: moxa: fix bit test in moxa_start() sysfs: Fix memory leak in sysfs_sd_setsecdata(). futex: Cover all PI opcodes with cmpxchg enabled check USB: gadget: Make g_hid device class conform to spec. usb: gadgetfs: return number of bytes on ep0 read request usb: renesas_usbhs: bugfix: add .release function to... usb: musb: Reselect index reg in interrupt context usb: dwc3: use proper function for setting endpoint... usb: dwc3: fix bogus test in dwc3_gadget_start_isoc staging: r8712u: Fix regression in signal level after... staging: r8712u: Fix regression introduced by commit... staging: r8712u: Add missing initialization and remove... powerpc/usb: fix bug of kernel hang when initializing usb USB: ftdi_sio: new PID: LUMEL PD12 USB: ftdi_sio: add support for FT-X series devices USB: ftdi_sio: new PID: Distortec JTAG-lock-pick USB: Microchip VID mislabeled as Hornby VID in ftdi_sio. USB: ftdi_sio: add support for BeagleBone rev A5+ USB: ftdi_sio: fix problem when the manufacture is... staging: zcache: avoid AB-BA deadlock condition USB: option: add ZTE MF820D USB: option: make interface blacklist work again USB: option driver: adding support for Telit CC864... USB: option: Add MediaTek MT6276M modem&app interfaces credits","tags":"Utappia Projects","loc":"http://utappia.org/optimus-kernel-3-2-14-released.html","title":"Optimus Kernel 3.2.14 released"},{"text":"To all Kernel compilers out there... new releases of Linux are on the wild... All users of the 3.2 and 3.3 kernel series must upgrade. Numerous fixes and features are now in the new versions of Linux Kernel. You may wonder which version you should pick. Here is a quick decision making algorithm : if you are experienced user and you love to be on the edge then choose 3.3.1 if you are experienced user and you want to test new features then choose 3.3.1 if you want just an update for your existing 3.2.x series then choose 3.2.14 Stay tuned if you would like precompiled packages of Linux kernel patched with BFS/BFQ and in-house optimizations. Soon there will be new packages for download ;) Until then if you just want vanilla kernel download it from Kernel.org","tags":"Utappia Projects","loc":"http://utappia.org/linux-v3-3-1-and-v3-2-14-are-released.html","title":"Linux v3.3.1 and v3.2.14 are released"},{"text":"Most of the average users will (almost) never need to open terminal window to intsall, update software or do some maintenance tasks. There is a respectful amount of software out there that do things in the most easy way. But what happens when you want to use terminal and you just want to do things in a much easier way and not getting tired of typing? In computing, alias is a command in various command line interpreters (shells) such as Unix shells, 4DOS/4NT and Windows PowerShell, which enables a replacement of a word by another string. This way a long line of command can be replaced by simple human-understandable words. The file that incorporates all the aliases can be found either in home users folder .bashrc or .bash_aliases or in a system wide used folder /etc/bashrc or /etc/bash.bashrc The general synax of adding aliases is by adding lines in the following manner: alias NICKNAME='full command here' Where the NICKNAME is a word/name that you will remember and invoke the 'full command here' part of the aliases. So for system maintenance purposes we will add some useful aliases. Open a terminal window and type : gedit .bashrc This will open the Gedit Editor so that we can add the following lines at the end of the file alias Update='sudo apt-get update' alias Upgrade='sudo apt-get upgrade' alias Install='sudo apt-get install' alias Clean='sudo apt-get autoremove && sudo apt-get autoclean && sudo apt-get clean' alias Editaliases='gedit ~/.bashrc' Save and close the terminal. You may need to logout and login back or type bash and hit enter to make the changes take effect. This way you can just type: Install vlc to install the vlc software. Some notes for the above aliases: The first letter of the NICKNAME is by purpose in capital letter so that we avoid to use some system reserved alias that we may not aware of. The aliases are distribution agnostic. Just change the debian commands with the one that resembles your distributions commands You can add as many aliases as you can remember to make your life easier in the command line world. A quick last tip: If you want to install a software that comes with a bunch of packages (.deb) you can add the following alias to avoid typing all the names of the packages: alias Multinstall='sudo dpkg -i *.deb' For example you have download Optimus Kernel and you see that it comes with multiple \".deb\" files. What you need to do is delete any package that you don't need from the folder and then type: Multinstall","tags":"Maintenance","loc":"http://utappia.org/must-have-aliases-for-system-maintenance.html","title":"Must have aliases for system maintenance"},{"text":"You can download the latest version of Optimus Kernel which is based on the following recipes : Linux 3.2.12 Ubuntu/Debian patchsets BFS and BFQ patches In-house optimizations Go Grab your Packages from the Download Page - - - > Optimus Change log : Rebuild and synced with 3.2.12 vanilla Linux kernel (for what is included please read the kernel log on website) Packages are named after \"linux-*-X.X.X-999-optimus\" to make sure that it is always the first kernel on the GRUB menu even if Ubuntu (or) derivatives have upgraded their kernel Kernel Change log : hwmon: (zl6100) Enable interval between chip accesses... target: Fix compatible reservation handling (CRH=1... iscsi-target: Fix reservation conflict -EBUSY response... i2c-algo-bit: Fix spurious SCL timeouts under heavy... rapidio/tsi721: fix bug in register offset definitions hwmon: (w83627ehf) Fix temp2 source for W83627UHG hwmon: (w83627ehf) Fix memory leak in probe function Ghwmon: (w83627ehf) Fix writing into fan_stop_time for... sparc32: Add -Av8 to assembler command line. Block: use a freezable workqueue for disk-event polling block: fix __blkdev_get and add_disk race condition block, sx8: fix pointer math issue getting fw version block: Fix NULL pointer dereference in sd_revalidate_disk regulator: Fix setting selector in tps6524x set_voltage... usb: asix: Patch for Sitecom LN-031 IPv6: Fix not join all-router mcast group when forwardi... tcp: fix tcp_shift_skb_data() to not shift SACKed data... bridge: check return value of ipv6_dev_get_saddr() tcp: don't fragment SACKed skbs in tcp_mark_head_lost() r8169: corrupted IP fragments fix for large mtu. packetengines: fix config default vmxnet3: Fix transport header size tcp: fix false reordering signal in tcp_shifted_skb sfc: Fix assignment of ip_summed for pre-allocated... ppp: fix 'ppp_mp_reconstruct bad seq' errors ipsec: be careful of non existing mac headers neighbour: Fixed race condition at tbl->nht atl1c: dont use highprio tx queue acer-wmi: No wifi rfkill on Lenovo machines vfs: fix double put after complete_walk() vfs: fix return value from do_last() CIFS: Do not kmalloc under the flocks spinlock perf/x86: Fix local vs remote memory events for NHM/WSM rt2x00: fix random stalls omap3isp: ccdc: Fix crash in HS/VS interrupt handler PCI: ignore pre-1.1 ASPM quirking when ASPM is disabled x86: Derandom delay_tsc for 64 bit fix the \"too late munmap()\" race fix io_setup/io_destroy race ALSA: hda/realtek - Apply the coef-setup only to ALC269VB ASoC: neo1973: fix neo1973 wm8753 initialization","tags":"Utappia Projects","loc":"http://utappia.org/optimus-kernel-3-2-12-released.html","title":"Optimus Kernel 3.2.12 released"},{"text":"The Boyhood of Raleigh by Sir John Everett Millais, oil on canvas, 1870. A seafarer tells the young Sir Walter Raleigh and his brother the story of what happened out at sea Image source: Wikipedia.org Most software are created for business purposes. But some software are created to solve real life problems. This is the story behind uCareSystem... Any user who has ever used Ubuntu or any Debian derivative knows that the best way to have their system in a good shape and secure, must use the Update Manger to regularly check for any system and software updates. But that's one part of the procedure where most users usually stop. What about the packages that where downloaded for update reasons and now they are not needed and they reserve free space ? What about packages that where installed to satisfy dependencies for some packages and that are no more needed ? What about packages and configuration files which are not required by any other package upon your system ? What about the stored archives in your cache for packages that are no longer in the repositories or that have a newer version in the repositories ? Well, unfortunately the Update Manger doesn't deal with the above problems and do not provide any means to resolve them. Please read for more information at Comparison of uCareSystem and Update Manager>>> On the other hand, Linux and open source community in general, has created some wonderful tools and so we didn't have to reinvent the wheel. What we needed for the software, was already out there. The only thing that was missing was just to pick them and add them to a software in such way that it would do what it was intended to. This tools are : Synaptic Package Manager DebOrphan Apt-Get command line tools Cache Drop Zenity Bash Script And that was it ! The first code of the application was released in 19-02-2009 under the \"2Click Update\" name !. At first it was a \"primitive\" bash script with no user interface and it was used just for personal needs. One day, I shared the app with some friends and got some useful feedback. This feedback has over the next months shaped the overall transformation of 2Click Update which has been tremendous: Received many features that were not found in the first releases Translated to over 20 Languages by community contributions Downloaded over 20.000 times On these foundations we will continue under a new name, \"uCareSystem\" pointing out the fact that a user should care about system health.","tags":"Utappia Projects","loc":"http://utappia.org/the-story-behind-ucaresystem.html","title":"The story behind uCareSystem"},{"text":"The Boyhood of Raleigh by Sir John Everett Millais, oil on canvas, 1870. A seafarer tells the young Sir Walter Raleigh and his brother the story of what happened out at sea Image source: Wikipedia.org Most software are created for business purposes. But some software are created to solve real life problems. This is the story behind iQunix... As I have previously stated on an introductory article about iQunix we have some users who: Love the freedom of choosing by themselves Love the minimalistic features Love the easy to use features of Ubuntu Love the enormous community support that Ubuntu provides Love the well established support of system updates and release cycle that Ubuntu provides Love the power of Debian but do not want to sacrifice the easiness offered by Ubuntu The above reasons are some of the most profound reasons behind the creation of iQunix. The target group of users are well explained here>>> With iQunix you just have a bare-bone Ubuntu with some minimum sets of software to get you started. From there you can \"transform\" iQunix into several use-cases: iQunix plus a professional application e.g Matlab for Scientific Workstation iQunix plus multimedia applications e.g for Media Center iQunix plus specialized applications e.g ERP - CRM Workstation iQunix plus developer applications e.g Software Development Workstation iQunix plus browser application e.g an internet Netbook PC The above are some of the most common use-cases that I have came across or have had feedback from users who use iQunix.","tags":"Utappia Projects","loc":"http://utappia.org/the-story-behind-iqunix.html","title":"The story behind iQunix"},{"text":"The Boyhood of Raleigh by Sir John Everett Millais, oil on canvas, 1870. A seafarer tells the young Sir Walter Raleigh and his brother the story of what happened out at sea Image source: Wikipedia.org Most software are created for business purposes. But some software are created to solve real life problems. This is the story behind Optimus Kernel... Upon 10 years of experience on Linux distributions some of the hottest issues that I came across are: Does compiling from source provide real and sensible performance boosts for overall the operating system ? Does compiling and removing unnecessary options from Linux Kernel provide real system boost ? Well for sure, Gentoo Linux users will give a definite answer : YES! There is not one scientific answer to this question. But for the following question: Does changing the Kernel Scheduler provide real and sensible performance boosts for overall the operating system ? We give the answer: YES ! Please read some personal observations here > >>> Also download and read a scientific paper that compare BFS and CFS > schedulers > >>> I believe that there is no point to just compile your kernel and not change the scheduler to BFS. So while I personaly use the optimised kernel I decided that everybody should benefit from this pre-optimized kernel and install it in an easy way. Last but not least, we chose to give the name \"Optimus Kernel\" because it is intuitive and descriptive about what it provides.","tags":"Utappia Projects","loc":"http://utappia.org/the-story-behind-optimus-kernel.html","title":"The story behind Optimus Kernel"},{"text":"The Boyhood of Raleigh by Sir John Everett Millais, oil on canvas, 1870. A seafarer tells the young Sir Walter Raleigh and his brother the story of what happened out at sea Image source: Wikipedia.org Most software are created for business purposes. But some software are created to solve real life problems. This is the story behind CaptureMe...While we where building up a new Open Source tech related website with some friends we needed a software to create some software reviews and tutorials. The problem was that there was not a single software out there that: Works out of the box Works on all Linux distributions No fuzz, Just screencasting ! Every software that we tested in Linux, had some kind of problem or it was not doing what it supposed to do. So I had to deal with this ASAP! Fortunately, Linux and open source community in general, has created some wonderful tools and so I didn't have to reinvent the wheel. What we needed for the software, was already out there. The only thing that was missing was just to pick them and add them to a software in such way that it would do what it was intended to. This tools are : FFmpeg Zenity Bash Scripting We can read on Wikipedia page for FFmpeg: FFmpeg is a free software project that produces libraries and programs for handling multimedia data. The most notable parts of FFmpeg are libavcodec , an audio/video codec library used by several other projects, libavformat , an audio/video container mux and demux library, and the ffmpeg command line program for transcoding multimedia files. We can read on Wikipedia page for Zenity: Zenity is a cross-platform program that allows the execution of GTK+ dialog boxes in command-line and shell scripts. So we have the recording \"Kernel\" which is the FFmpeg libraries, and we have \"Zenity\" for dealing with some simple user interactions for Bash Script applications. And that was it ! Last but not least, I chose the name \"CaptureMe\" because it is simple and descriptive as is the software its self.","tags":"Utappia Projects","loc":"http://utappia.org/the-story-behind-captureme.html","title":"The story behind CaptureMe"},{"text":"We love screenshots. Who doesn't ? So we are uploading some fresh screenshots of the latest CaptureMe caught in step-by-step action. Now that you have downloaded the CaptureMe in a tar.gz file and then you have extracted it in your preferred extraction place. You just need to double-click the \" CaptureMe \" file and press \" Run \" Then you will be asked if you would like to record the video \" withsound \" or with \" no sound \". If you choose with sound, your microphone will be reserved as a sound recording device. After you make your selection and press \"OK\", your \"mouse point\" will be turned into a cross shape. If you click on your Desktop, your recording will be from your entire screen. If you click on a window then the recording will be just from that window. After you click on your Desktop ( full screen recording mode ), or on a window ( partial window recording mode ) you will be presented with a \"recording termination window\". You can minimize this windows until you feel that you want to finish the screencasting. After you have finished your recording just click on the minimized window of CaptureMe. On the unminimized window of CaptureMe, just click \"OK\" to stop the recording. Then you will be presented with the final window of completion which informs you that your recording has been saved in your HOME folder Now open your HOME folder and you will find the recorded video with a name like \"CaptureMe_DATE_TIME.avi\" Now you can use your favorite video editing application to edit the video and remove any parts you don't like !","tags":"Utappia Projects","loc":"http://utappia.org/screenshot-of-captureme-caught-in-action.html","title":"Screenshot of CaptureMe caught in action"},{"text":"I am exited for a brand new release of CaptureMe . This new release does not have some totally new features but a major BUG fix. CaptureMe was initially available as: terminal only application No Graphical user interface only in Greek language After some thoughts that I had (the story will be told soon...) I decided that for making it useful I had to deal with these \"bugs\". So after release v2.0 , CaptureMe had a major upgrade with the introduction of a simple user interface and no need for terminal use. But anybody who downloaded version 2.2 hit on a major BUG: No Recording of video with sound or NOT ! This was due to a translation typo which, did not produced any error or failure message and it just did not started recording even if it seemed to be recording :) So I am realy sorry for any inconvenience! You can download a new version of CaptureMe from the Download Page >>>>","tags":"Utappia Projects","loc":"http://utappia.org/captureme-v2-3-available-for-download.html","title":"CaptureMe v2.3 available for download"},{"text":"We love screenshots. Who doesn't ? So I am uploading some fresh screenshots of the latest uCareSystem caught in step-by-step action. Ok you have downloaded the uCareSystem in a tar.gz file and then you have extracted it in your preferred extraction place. You just need to double-click the \" uCareSystem \" file and press \" Run \" You will be the asked for your Administrative password to elevate your system rights and be able to do the administrative tasks. Then uCareSystem will act as a \"System Maintenance Assistant\": It will refresh your package list: If there are \"Software Update\" available you can press \"install updates\" or else it will be empty and you can press \"Close\": If there are updates and you pressed \"install updates\", the update manager will start downloading and installing the software updates: After it finishes its tasks you can click \"Close\" Then uCareSystem will automatically : Remove unneeded packages that were automatically installed to satisfy dependencies for some package and that are no more needed. Remove unneeded packages and configuration files which are not required by any other package upon your system Removes all unneeded stored archives in your cache for packages that are no longer in the repositories or that have a newer version in the repositories. Delete from cache the downloaded packages to free up some space And last but not least it will optimize you Ram Memory as you can see in the following picture: After all the above you can click \"OK\": So that's the magic of uCareSystem. Wanna try it ? Go to our Download Page>>>","tags":"Utappia Projects","loc":"http://utappia.org/some-fresh-screenshot-of-ucaresystem-caught-in-action.html","title":"Some fresh screenshot of uCareSystem caught in action"},{"text":"uCareSystem's main update mechanism comes from Ubuntu/Debian's Update Manager. But uCareSystem continues its work where classic Update Manger stops. You may ask : what the heck does it do and why to use uCareSystem when there is already Ubuntu Update manager available Ubuntu's Update Manger will just inform you that there are available system update that can be installed. Most of the times users tend to ignore it thinking that its not necessary yet to install them or they are in the middle of something else and they Close the window that appears. Wrong move people! Lets compare uCareSystem with Ubuntu Update manager with a simple user case: Lets say, you hate command line and you want to maintenance your system by keeping all parts with the latest updates. You open \"Update Manager\" You press \"Check\"\" to refresh your package list If there are updates available you press \"Install updates\" Then it asks you \"Confirm to install the updates\" Then you press \"Yes\" Update manager installs the updates and after it finishes, you press \"Close\" to close it. As a good \"admin\" of your system you want to cleanup the packages that left behind this procedure You use Synaptics, or UbuntuTweak , or Gtkorphan to clean the files under \"var/cache/apt/archives\", remove orphaned packages and clean up old residential config files. After many that many \"next.. next… OK… click… click… done\" your system is up-to-date and cleaned up. How about doing all of the above in just ONE application which will act as a \"Wizard\" and give you all the \"moves\" in one place. Just check Screenshots Page >>>","tags":"Utappia Projects","loc":"http://utappia.org/comparison-ubuntu-update-manager-and-ucaresystem.html","title":"Comparison: Ubuntu update manager and uCareSystem"},{"text":"As my previous post was a bit of a surprise for many of Linux users out there, I decided to distribute my work, so that others also can benefit from BFS kernel. Not many people are willing to compile a linux kernel from source but would definitely install a prepackaged one if they were given the opportunity. So... I have some good news for anyone interested. As you may know I keep posting any news about stable releases of Linux Kernel and updates about Zen Kernel. Well today, I created a github repository to upload prebuilt packages of the latest BFS optimized Linux kernel so that anyone can download and install these packages. System Requirements : - OS: Ubuntu - CPU: Intel or AMD - Arch: 32bit and 64bit This repo will always have the latest stable release packages of BFS optimized Linux Kernel so stay tuned... To use them just install the 3 packages related to your Operating Systems architecture: Ubuntu 32bit : linux-headers- all.deb , linux-headers- .deb, linux-image-*i386.deb Ubuntu 64bit: linux-headers- all.deb , linux-headers- amd64.deb, linux-image-*amd64.deb You can keep up with the latest news about brand new package releases by reading : Utappia or the social network pages Update (13-Mar-2012) : Now compatible with Intel and AMD cpu's on Ubuntu 64bit. Stay tuned for 32bit packages Update (15-Mar-2012) : Because now I don't use Zen Kernel but I build my own BFS/BFQ patched Ubuntu kernels, I removed the Zen Deb repo and created a new one \"Optimus Linux Kernel\" Update (15-Mar-2012) : Added 32bit packages to the downloaded ziped archive","tags":"Utappia Projects","loc":"http://utappia.org/bfs-bfq-optimized-linux-kernel-packages-ready-for-install.html","title":"BFS – BFQ optimized linux kernel packages ready for install"},{"text":"For some time now, I have stopped using the Linux kernel that comes bundled with the Ubuntu operating system and use a version that has a different approach on the matter of kernel schedulers . \"Scheduler\" is a time-resource-manager (task scheduler) who determines which process and how much it employs the processor (CPU) of the computer. The official scheduler of the Linux kernel is the CFS. In the past, I made several experiments (benchmarks) to see if I could find any noticeable difference in performance of my system by optimizing the kernel and changing the scheduler. The results of the experiments did not give me any reasonable grounds for the necessity of optimizing the Linux Kernel, let alone to change the scheduler of the kernel on modern machines. Nevertheless I continued to use a Linux Kernel with the BFS scheduler (see my article here : [Greek] Optimizing Ubuntu Linux Kernel with BFS - BFQ ) and of course to optimize the kernel according the specs of my machine. But yesterday, something really unexpected happened and I saw before my eyes the huge difference in performance that can give a Linux Kernel scheduler not only to an old PC but also to a modern PC with 4GB DDR3 RAM and a Intel i7 Quad Core CPU !! Preface: Completely Fair Schedule (CFS): To quote Wikipedia \"The Completely Fair Scheduler is the name of a task scheduler which was merged into the 2.6.23 release of the Linux kernel . It handles CPU resource allocation for executing processes, and aims to maximize overall CPU utilization while also maximizing interactive performance.\" CFS is the standard scheduler for Android. As such it is compatible with all apps and processes run in Android Brain FUCK Scheduler (BFS): To quote Mr. Con Kolivas , the developer of BFS \"BFS is the Brain Fuck Scheduler . It was designed to be forward looking only, make the most of lower spec machines, and not scale to massive hardware. ie it is a desktop orientated scheduler, with extremely low latencies for excellent interactivity by design rather than \"calculated\", with rigid fairness, nice priority distribution and extreme scalability within normal load levels.\" Google looked at BFS to use as the Android scheduler but decided that it wasn't mature enough yet. Experiment: In this experiment I used a 1,6 GB video file (.MOV) 40 minutes long and started to render it on 720p resolution. The system had the same Uptime and same conditions. The screenshot was taken on the same percentage so that we can have a fair measurement on \"estimated completion time\". I repeated this experiment for about 10 times, keeping the same conditions and it gave me the same results. Now this is what I got : As you can see with the BFS scheduler the \"Job\" will be completed in half of the time that CFS needs. One observation that can not be seen in a picture is that with BFS the CPU had a constant and steady 98-100% CPU utilization, in contrast with CFS the CPU utilization was dropping from time to time to 25%. A \"must read\" paper for a Scientific measurements of CFS vs BFS : Scientific approach to the CFS vs BFS","tags":"Utappia Projects","loc":"http://utappia.org/bfs-vs-cfs-some-personal-observations-on-linux-kernel-performance.html","title":"BFS vs CFS: Some personal observations on Linux Kernel performance"},{"text":"A few weeks ago I received an email request for interview, from Jonathan Nadeau of Frostbite Media. We talked about iQunix OS and how I got involved with Linux in general. The email was, as follows: Hello, My name is Jonathan Nadeau and I'm the owner of Frostbite Systems located at http://www.frostbitesystems.com, I have a podcast called Frostcast located at http://www.frostbitemedia.org I'm interviewing project leaders of different GNU / Linux distros along with free software. I'm wondering if you would be interested in doing an interview for the podcast? If you are interested please let me know and we can set something up. Thank you for your time and help. -Jonathan Nadeau After that, we arranged a day/time for interview that you can download in mp3/ogg formats: ~~ Interview with Salih Emin, Project Leader of IQUnix mp3 ~~ ~~ Interview with Salih Emin, Project Leader of IQUnix ogg ~~ Please accept my apologies for my awful English :P Update : The website seems down so I found a segment of the mentiond interview in an other show called Linux For The Rest Of Us so here is the segment: iQunix review","tags":"Utappia Projects","loc":"http://utappia.org/interview-with-frostbite-media-on-iqunix-os.html","title":"Interview with Frostbite Media on iQunix OS"},{"text":"I am pleased to present to you a Linux distribution that I had in my mind for a while and was able to release it recently. The distribution is called iQunix and it is an Ubuntu based distribution. It is pronounced as i-qu-nix ( iqunix pronounce ), and the focuses (or at least it tries to) on the respect that a simple *nix oriented operating system that should have on the intelligence (iq) of the end-user :) Introduction Most Linux distributions come along with pre-installed applications, beautiful graphics, docks, gorgeous icons, that in most cases you will inevitably change or modify them. For instance, when someone completes the installation of Ubuntu, the system has already applications pre-installed usually OpenOffice , Firefox, Evolution, MeMenu, Gwiber, Transmission and some other apps that the end-user may not even be aware of. The average user will ignore them and use his preferred applications like Chrome instead of Firefox, VLC instead of Totem Movie Pl, Twitter and Facebook instead of Gwiber and so on. Also the more experienced users will try to uninstall, all the applications that are in no use for them. In contrast iQunix OS is just the Operating System with a clean Gnome desktop environment . There is just the minimum software stack that is required to make a functional desktop environment and actually nothing is pre-installed. This way iQunix lets the user decide how should his desktop look like and what applications he needs, respecting his intelligence. What's included Gedit -- Simple text editor Terminal -- For those who know the power of linux shell (2Click Update) now callded uCareSystem. A simple, yet intuitive system maintenance app Nautilus -- The best file manager to manage your files and folders Remastersys To make a backup of your entire operating system with all your installed programs Hardware Drivers installer. To automatically detect you systems graphic card and wireless network card and install the appropriate drivers Synaptic Package Manager. To install the programs of your choice. Users of iQunix can immediately start using Synaptic Package manager to install additional software, add his favorite icons, themes and wallpapers from Gnome Eyecandies , or from where ever he wants. Advantages - Disadvantages Let's see what are the advantages and disadvantages if you decide to use iQunix OS Benefits Speed – It is just the operating system without any preinstalled applications. Ubuntu by nature -- with all the available apps that are used by millions of users. Support from the community of Ubuntu -- A Google search on any topic combined with the word \"Ubuntu\" will return millions of results, user tips, articles and how-to's. It is lightweight without unnecessary system services running in the background Disadvantages Adjustment Time, a necessary period of time is needed to adjust the system based on user needs. It gives the same user experience offered by Windows, in which the OS is \"empty\" of applications and users must install the applications such as Office, Browser, Video Player, Music Player etc. Core system environment the power of choice and freedom is where the end user decides what he wants to install and not. It is a bit \"ugly\" the end user decides according to his aesthetic criteria of how beautiful should the desktop environment look like Target Group Average users If you have ever installed Ubuntu (at least once), added your favorite applications and you have used it every day, then iQunix is the ideal environment to build your unique desktop environment. Experienced users iQunix is also suitable for those who prefer to have control of their system, from the ground up and to decide what should and what should not be installed. Usually these users are those who want the power of Debian without sacrificing the \"amenities\" offered by Ubuntu. Professionals In work environments, professionals usually use a minimum sets of applications that are necessary for their work. iQunix is ideal for professionals because they get only the operating system on which they can install the applications that are necessary for their work. This way their \"workstation\" is not overloaded by unnecessary applications and thus making the system unstable. Researchers If you are a researcher and use for example only one application (e.g Matlab) for complex mathematical algorithms, iQunix is the ideal environment because it does not compromise your system resources with applications and background services that are not in use. Support Ubuntu project has been committed to a regular release cycle and has managed to deliver on that commitment without fail. As mentioned before, iQunix is based on Ubuntu, therefore it will follow the regular system maintenance updates provided by the Ubuntu community and Canonical. The current version of iQunix is based on Ubuntu 10.10 (it has all the system updates that have been released for Ubuntu since October 2010) and hence it will receive software maintenance updates until April 2012. Finally, in future and depending on the needs I will provide some Patches and Wizards that can be run by the end user. Epilogue As a Linux user you know what are your needs therefor, iQunix offers a clean environment with the known \"easy to use\" desktop of Ubuntu, to customize it according those needs. As your needs are personal and different from others, why should your OS not differ?","tags":"Utappia Projects","loc":"http://utappia.org/iqunix-os-clean-fast-and-simple-os.html","title":"iQunix OS: Clean, Fast and Simple OS"},{"text":"\"Everybody wants to do something to help, but nobody wants to be first.\" Donation We have put, time and effort to bring out the best of our self for this project. If you have found it useful, funding this time and effort with your donations can be a rewarding way of making a difference. Pay what you want Maybe next time Click the donate button and enter the amount you want to donate If you don't want to Donate this time, just click the download icon (Ad supported link) Licence By downloading the CaptureMe app you accept and agree to obey the license GPLv3.0 CaptureMe app is Licensed under GPLv3.0. System Requirements Any Linux based Desktop Distribution with FFmpeg and Zenity preinstalled Features CaptureMe is a hasle free screencasting tool.Please read more for details: Screenshots The story behind CaptureMe Support and Bug fixing Utappia accepts bounties for bug fixing and funding for continued development. Please visit Utappia's Bountysource webpage for more:","tags":"Utappia Projects","loc":"http://utappia.org/captureme-download.html","title":"Download CaptureMe"},{"text":"\"Everybody wants to do something to help, but nobody wants to be first.\" Donation We have put, time and effort to bring out the best of our self for this project. If you have found it useful, funding this time and effort with your donations can be a rewarding way of making a difference. Pay what you want Maybe next time Click the donate button and enter the amount you want to donate If you don't want to Donate this time, just click the download icon (Ad supported link) Licence By downloading the iQunix you accept and agree to obey the license provided by Ubuntu iQunix app is Licensed as described in Ubuntu Licensing System Requirements 64bit Intel or AMD based PC with at least 1GB RAM Features Minimalistic 64 bit operating system, in which almost nothing is pre-installed. Please read more for details: What is iQunix Video Review The story behind iQunix Interview about iQunix Support and Bug fixing Utappia accepts bounties for bug fixing and funding for continued development. Please visit Utappia's Bountysource webpage for more:","tags":"Utappia Projects","loc":"http://utappia.org/iQunix-download.html","title":"Download iQunix"},{"text":"\"Everybody wants to do something to help, but nobody wants to be first.\" Donation We have put, time and effort to bring out the best of our self for this project. If you have found it useful, funding this time and effort with your donations can be a rewarding way of making a difference. Pay what you want Maybe next time Click the donate button and enter the amount you want to donate If you don't want to Donate this time, just click the download icon (Ad supported link) Licence By downloading the Optimus Kernel you accept and agree to obey the license GPLv2.0 uCareSystem app is Licensed under GPLv2.0. System Requirements Ubuntu (32bit or 64bit) on Intel or AMD based PC Features Optimus kernel, is an optimized Ubuntu linux kernel with BFS and BFQ schedulers enabled by default. Please read more for details: Comparison with default linux kernel The story behind Optimus Kernel Support and Bug fixing Utappia accepts bounties for bug fixing and funding for continued development. Please visit Utappia's Bountysource webpage for more:","tags":"Utappia Projects","loc":"http://utappia.org/optimuskernel-download.html","title":"Download Optimus Kernel"},{"text":"\"Everybody wants to do something to help, but nobody wants to be first.\" Donation We have put, time and effort to bring out the best of our self for this project. If you have found it useful, funding this time and effort with your donations can be a rewarding way of making a difference. Pay what you want Maybe next time Click the donate button and enter the amount you want to donate If you don't want to Donate this time, just click the download icon (Ad supported link) Licence By downloading the uCareSystem app you accept and agree to obey the license GPLv2.0 uCareSystem app is Licensed under GPLv2.0. System Requirements Ubuntu (12.04 or later) or Debian (6 or later) and derivative distributions (Not tested on every flavor) Features Automatically check updates, install updates, remove junk files and clean used space. Please read more for details: Screenshots Comparison with Update manager The story behind uCareSystem Support and Bug fixing Utappia accepts bounties for bug fixing and funding for continued development. Please visit Utappia's Bountysource webpage for more:","tags":"Utappia Projects","loc":"http://utappia.org/ucaresystem-download.html","title":"Download uCareSystem"}]}